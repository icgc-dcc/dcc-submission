{"created":1370456138993,"lastUpdate":1469649390016,"version":"0.14a","state":"CLOSED","files":[{"name":"meth_seq_m","label":"Sequencing-based DNA Methylation (meth_seq) - Analysis Metadata File (m)","pattern":"^meth_seq_m(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":["analysis_id","analyzed_sample_id"],"fields":[{"name":"analysis_id","label":"Unique identifier assigned to a computational analysis run that was performed on a group of analyzed samples and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"hnc_12, CCG_34_94583, BRCA47832-3239","pattern":"^[\\w+\\-\\_]+$"}}],"controlled":false},{"name":"analyzed_sample_id","label":"A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"ov-45, 90343a, BRCAZ-TG","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"analyzed_sample_id cannot begin with 'SA*'. This prefix is reserved for ICGC IDs","script":"if (analyzed_sample_id ~= '(S|s)(A|a).*') { return false } return true"}}],"controlled":false},{"name":"sequencing_platform","label":"Identifier of platform or technology used for analysis or verification; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.platform.v1"}}],"controlled":false},{"name":"fraction_wg_cpg_sites_covered","label":"Fraction of whole genome CpG sites covered in the assay","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[],"controlled":false},{"name":"conversion_rate","label":"Bisulfite conversion rate of the analyzed sample in the assay","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[],"controlled":false},{"name":"experimental_protocol","label":"Name of experimental protocol and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"Paired End http://www.illumina.com/technology/paired_end_sequencing_assay.ilmn","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.]|ftp://)[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":false},{"name":"sequencing_strategy","label":"Sequencing technique intended for the analyzed sample library","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.sequencing_strategy.v1"}}],"controlled":false},{"name":"base_quality_score_threshold","label":"Filtering threshold of base quality score","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":false}}],"controlled":false},{"name":"alignment_algorithm","label":"Name of alignment algorithm and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"BWA 0.6.2 http://bio-bwa.sourceforge.net bwa aln -q20 HGref s1.fastq > s1_bwa.sai","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.])[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":false},{"name":"other_analysis_algorithm","label":"Names of other analysis algorithms. Separate multiple algorithms by commas.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[],"controlled":false},{"name":"raw_data_repository","label":"Public repository where raw data is submitted","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.raw_data_repository.v2"}}],"controlled":false},{"name":"raw_data_accession","label":"Accession for referencing the raw data at the public repository","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"script","config":{"description":"Format of raw data accession must match the format required by the raw data repository","script":"EGA = (raw_data_repository == '1' || raw_data_repository == 'EGA'); dbSNP = (raw_data_repository == '2' || raw_data_repository == 'dbSNP'); TCGA = (raw_data_repository == '3' || raw_data_repository == 'TCGA'); CGHub = (raw_data_repository == '4' || raw_data_repository == 'CGHub'); GEO = (raw_data_repository == '5' || raw_data_repository == 'GEO'); TARGET = (raw_data_repository == '6' || raw_data_repository == 'TARGET'); if (EGA) { raw_data_accession ~= '(?iu)EGA[DS][0-9]{11}|((?iu)EGA[S][0-9]{11})?([:])?((?iu)EGA[D][0-9]{11})?([:](?iu)EGA[N][0-9]{11})?(([:](?iu)EGA[X][0-9]{11})+)?(([:](?iu)EGA[R][0-9]{11})+)?(([:](?iu)EGA[F][0-9]{11})+)?' } else if (GEO) { raw_data_accession ~= '(G(SE|DS|SM)[0-9]+)((([,])(G(SE|DS|SM)[0-9]+))+)?' } else if (TCGA) { raw_data_accession ~= 'TCGA-[A-Za-z0-9_-]+'} else if (CGHub) { raw_data_accession ~= '[A-Fa-f0-9-]+' } else if (dbSNP) { raw_data_accession ~= '[A-Za-z0-9_-]+.*' } else if (TARGET) { raw_data_accession ~= 'ftp://caftpd.nci.nih.gov/pub/dcc_target/[A-Za-z0-9/_.-]+'} else { return false }"}}],"controlled":false},{"name":"assembly_version","label":"Version of human reference genome assembly used in the analysis; specify the version used in alignments, or associated with the particular platform used","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.assembly_version.v2"}}],"controlled":false}],"relations":[{"fields":["analyzed_sample_id"],"bidirectional":false,"other":"sample","otherFields":["analyzed_sample_id"],"optionals":[]}]},{"name":"meth_seq_p","label":"Sequencing-based DNA Methylation (meth_seq) - Primary File (p)","pattern":"^meth_seq_p(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":[],"fields":[{"name":"analysis_id","label":"Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"hnc_12, CCG_34_94583, BRCA47832-3239","pattern":"^[\\w+\\-\\_]+$"}}],"controlled":false},{"name":"analyzed_sample_id","label":"A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"ov-45, 90343a, BRCAZ-TG","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"analyzed_sample_id cannot begin with 'SA*'. This prefix is reserved for ICGC IDs","script":"if (analyzed_sample_id ~= '(S|s)(A|a).*') { return false } return true"}}],"controlled":false},{"name":"chromosome","label":"Name of the chromosome containing the mutation/variation","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.chromosome.v3"}}],"controlled":false},{"name":"chromosome_start","label":"Chromosome start position of the feature being described","valueType":"INTEGER","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"243198475","pattern":"^\\d+$"}},{"type":"script","config":{"description":"Chromosome start position must be equal or greater than 1","script":"lengths = ['1':249250621, '2':243199373, '3':198022430, '4':191154276, '5':180915260, '6':171115067, '7':159138663, '8':146364022, '9':141213431, '10':135534747, '11':135006516, '12':133851895, '13':115169878, '14':107349540, '15':102531392, '16':90354753, '17':81195210, '18':78077248, '19':59128983, '20':63025520, '21':48129895, '22':51304566, 'X':155270560, 'Y':59373566, 'MT':16569]; if (!(chromosome_start >= 1 && chromosome_end <= lengths[chromosome] && chromosome_start <= chromosome_end)) { return false } return true"}}],"controlled":false},{"name":"chromosome_end","label":"Chromosome end position of the feature being described","valueType":"INTEGER","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"243198479","pattern":"^\\d+$"}},{"type":"script","config":{"description":"Chromosome end position must be less than or equal to the length of the chromosome","script":"lengths = ['1':249250621, '2':243199373, '3':198022430, '4':191154276, '5':180915260, '6':171115067, '7':159138663, '8':146364022, '9':141213431, '10':135534747, '11':135006516, '12':133851895, '13':115169878, '14':107349540, '15':102531392, '16':90354753, '17':81195210, '18':78077248, '19':59128983, '20':63025520, '21':48129895, '22':51304566, 'X':155270560, 'Y':59373566, 'MT':16569]; if (!(chromosome_start >= 1 && chromosome_end <= lengths[chromosome] && chromosome_start <= chromosome_end)) { return false } return true"}}],"controlled":false},{"name":"chromosome_strand","label":"Chromosome strand of mutation. Only accept positive strand (1)","valueType":"INTEGER","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"1","pattern":"^(1)$"}}],"controlled":false},{"name":"methylation_ratio","label":"Values ranging from 0 (completely unmethylated) to 1 (completely methylated). Methylation_ratio = methylated_read_count / (methylated_read_count + unmethylated_read_count). Value should be number with two decimal places.","valueType":"DECIMAL","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":false}}],"controlled":false},{"name":"methylated_read_count","label":"Count of methylated reads at the specified genomic location","valueType":"DECIMAL","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":false}}],"controlled":false},{"name":"unmethylated_read_count","label":"Count of unmethylated reads at the specified genomic location","valueType":"DECIMAL","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":false}}],"controlled":false},{"name":"verification_status","label":"Indicate if the detected methylation status of this location is confirmed by using an independent orthogonal genotype platform/technology","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"codelist","config":{"name":"GLOBAL.0.verification_status.v2"}}],"controlled":false},{"name":"verification_platform","label":"Identifier of orthogonal platform or technology used to confirm that the detected methylation status is true; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"codelist","config":{"name":"GLOBAL.0.platform.v1"}},{"type":"script","config":{"description":"If mutation is verified, the verification platform must be specified (cannot be -777/-888)","script":"if ( (verification_status == '1' || verification_status == 'tested and verified') && verification_platform == null ) { return false } else { return true }"}}],"controlled":false}],"relations":[{"fields":["analysis_id","analyzed_sample_id"],"bidirectional":true,"other":"meth_seq_m","otherFields":["analysis_id","analyzed_sample_id"],"optionals":[]}]},{"name":"mirna_seq_m","label":"Sequencing-based miRNA Expression (mirna_seq) - Analysis Metadata File (m)","pattern":"^mirna_seq_m(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":["analysis_id","analyzed_sample_id"],"fields":[{"name":"analysis_id","label":"Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"hnc_12, CCG_34_94583, BRCA47832-3239","pattern":"^[\\w+\\-\\_]+$"}}],"controlled":false},{"name":"analyzed_sample_id","label":"A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"ov-45, 90343a, BRCAZ-TG","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"analyzed_sample_id cannot begin with 'SA*'. This prefix is reserved for ICGC IDs","script":"if (analyzed_sample_id ~= '(S|s)(A|a).*') { return false } return true"}}],"controlled":false},{"name":"assembly_version","label":"Version of human reference genome assembly used in the analysis; specify the version used in alignments, or associated with the particular platform used","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.assembly_version.v2"}}],"controlled":false},{"name":"sequencing_platform","label":"Identifier of platform or technology used for analysis or verification; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.platform.v1"}}],"controlled":false},{"name":"total_read_count","label":"Total number of reads containing miRNA sequences, this is an indication of sequencing depth","valueType":"INTEGER","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"experimental_protocol","label":"Name of experimental protocol and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"Paired End http://www.illumina.com/technology/paired_end_sequencing_assay.ilmn","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.]|ftp://)[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":false},{"name":"reference_sample_type","label":"Type of sample used as reference for calculating fold change","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"GLOBAL.0.reference_sample_type.v1"}}],"controlled":false},{"name":"alignment_algorithm","label":"Name of alignment algorithm and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"BWA 0.6.2 http://bio-bwa.sourceforge.net bwa aln -q20 HGref s1.fastq > s1_bwa.sai","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.])[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":false},{"name":"normalization_algorithm","label":"Name of normalization algorithm and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"Cufflinks 2.1.0 http://cufflinks.cbcb.umd.edu","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.])[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":false},{"name":"other_analysis_algorithm","label":"Names of other analysis algorithms. Separate multiple algorithms by commas.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[],"controlled":false},{"name":"sequencing_strategy","label":"Sequencing technique intended for the analyzed sample library.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.sequencing_strategy.v1"}}],"controlled":false},{"name":"raw_data_repository","label":"Public repository where raw data is submitted","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.raw_data_repository.v2"}}],"controlled":false},{"name":"raw_data_accession","label":"Accession for referencing the raw data at the public repository","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"script","config":{"description":"Format of raw data accession must match the format required by the raw data repository","script":"EGA = (raw_data_repository == '1' || raw_data_repository == 'EGA'); dbSNP = (raw_data_repository == '2' || raw_data_repository == 'dbSNP'); TCGA = (raw_data_repository == '3' || raw_data_repository == 'TCGA'); CGHub = (raw_data_repository == '4' || raw_data_repository == 'CGHub'); GEO = (raw_data_repository == '5' || raw_data_repository == 'GEO'); TARGET = (raw_data_repository == '6' || raw_data_repository == 'TARGET'); if (EGA) { raw_data_accession ~= '(?iu)EGA[DS][0-9]{11}|((?iu)EGA[S][0-9]{11})?([:])?((?iu)EGA[D][0-9]{11})?([:](?iu)EGA[N][0-9]{11})?(([:](?iu)EGA[X][0-9]{11})+)?(([:](?iu)EGA[R][0-9]{11})+)?(([:](?iu)EGA[F][0-9]{11})+)?' } else if (GEO) { raw_data_accession ~= '(G(SE|DS|SM)[0-9]+)((([,])(G(SE|DS|SM)[0-9]+))+)?' } else if (TCGA) { raw_data_accession ~= 'TCGA-[A-Za-z0-9_-]+'} else if (CGHub) { raw_data_accession ~= '[A-Fa-f0-9-]+' } else if (dbSNP) { raw_data_accession ~= '[A-Za-z0-9_-]+.*' } else if (TARGET) { raw_data_accession ~= 'ftp://caftpd.nci.nih.gov/pub/dcc_target/[A-Za-z0-9/_.-]+'} else { return false }"}}],"controlled":false}],"relations":[{"fields":["analyzed_sample_id"],"bidirectional":false,"other":"sample","otherFields":["analyzed_sample_id"],"optionals":[]}]},{"name":"mirna_seq_p","label":"Sequencing-based miRNA Expression (mirna_seq) - Primary File (p)","pattern":"^mirna_seq_p(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":[],"fields":[{"name":"analysis_id","label":"Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"hnc_12, CCG_34_94583, BRCA47832-3239","pattern":"^[\\w+\\-\\_]+$"}}],"controlled":false},{"name":"analyzed_sample_id","label":"A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"ov-45, 90343a, BRCAZ-TG","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"analyzed_sample_id cannot begin with 'SA*'. This prefix is reserved for ICGC IDs","script":"if (analyzed_sample_id ~= '(S|s)(A|a).*') { return false } return true"}}],"controlled":false},{"name":"mirna_db","label":"The name of the miRNA database used, chosen from the DCC's codelist","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"GLOBAL.0.mirna_db.v1"}}],"controlled":false},{"name":"mirna_id","label":"The miRNA accession ID in the chosen miRNA database. Use -777 when miRNA detected does not exist in the miRNA db, i.e., a possibly novel miRNA","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"script","config":{"description":"If the reported miRNA is in a public miRNA database (mirna_db is not null), a miRNA accession ID (mirna_id) must be specified","script":"if (mirna_db != '-777' && mirna_db != '-888') { mirna_id != '-777' && mirna_id != '-888' } else { return false; }"}}],"controlled":false},{"name":"normalized_read_count","label":"Normalized read count for the current miRNA","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":false}}],"controlled":false},{"name":"raw_read_count","label":"Raw read count for the current gene","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":false}}],"controlled":false},{"name":"fold_change","label":"Gene expression fold change","valueType":"DECIMAL","summaryType":null,"restrictions":[],"controlled":false},{"name":"is_isomir","label":"A flag from a codelist that indicates if the current miRNA is an isomir, which is defined as having a variation with respect to the annotated annotated mature miRNA","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"GLOBAL.0.is_isomir.v1"}}],"controlled":false},{"name":"chromosome","label":"Name of the chromosome containing the miRNA. Do not fill when the detected miRNA is annotated in miRNA database","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"GLOBAL.0.chromosome.v3"}},{"type":"script","config":{"description":"If the detected miRNA is in a public miRNA Db (ie. mirna_db is not null), the chromosome number should not be filled in (use '-888'). However if the reported miRNA is not in miRNA DB, chromosome must be filled in","script":"if (mirna_db != '-777' && mirna_db != '-888') { chromosome != '-777' && chromosome != '-888' } else if (mirna_db == '-777' || mirna_db == '-888') { chromosome == '-777' || chromosome == '-888' } else { return false }"}}],"controlled":false},{"name":"chromosome_start","label":"Chromosome start position of the feature being described","valueType":"INTEGER","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"243198475","pattern":"^\\d+$"}},{"type":"script","config":{"description":"If the detected miRNA is not in a public miRNA Db (ie. mirna_id and mirna_db are not provided), the chromosome start/end positions must be specified","script":"lengths = ['1':249250621, '2':243199373, '3':198022430, '4':191154276, '5':180915260, '6':171115067, '7':159138663, '8':146364022, '9':141213431, '10':135534747, '11':135006516, '12':133851895, '13':115169878, '14':107349540, '15':102531392, '16':90354753, '17':81195210, '18':78077248, '19':59128983, '20':63025520, '21':48129895, '22':51304566, 'X':155270560, 'Y':59373566, 'MT':16569]; if ( (mirna_db == '-777' || mirna_db == '-888') && (mirna_id == '-777' || mirna_id == '-888') ) { if (!(chromosome_start >= 1 && chromosome_end <= lengths[chromosome] && chromosome_start <= chromosome_end)) { return false } else { return true } } else { return true };"}}],"controlled":false},{"name":"chromosome_end","label":"Chromosome end position of the feature being described","valueType":"INTEGER","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"243198479","pattern":"^\\d+$"}},{"type":"script","config":{"description":"If the detected miRNA is not in a public miRNA Db (ie. mirna_id and mirna_db are not provided), the chromosome start/end positions must be specified. Chromosome end position must be less than or equal to the length of the chromosome","script":"lengths = ['1':249250621, '2':243199373, '3':198022430, '4':191154276, '5':180915260, '6':171115067, '7':159138663, '8':146364022, '9':141213431, '10':135534747, '11':135006516, '12':133851895, '13':115169878, '14':107349540, '15':102531392, '16':90354753, '17':81195210, '18':78077248, '19':59128983, '20':63025520, '21':48129895, '22':51304566, 'X':155270560, 'Y':59373566, 'MT':16569]; if ( (mirna_db == '-777' || mirna_db == '-888') && (mirna_id == '-777' || mirna_id == '-888') ) { if (!(chromosome_start >= 1 && chromosome_end <= lengths[chromosome] && chromosome_start <= chromosome_end)) { return false } else { return true } } else { return true };"}}],"controlled":false},{"name":"chromosome_strand","label":"Chromosome strand of the feature being described.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"GLOBAL.0.strand.v1"}},{"type":"script","config":{"description":"If the detected miRNA is not in a public miRNA Db (ie. mirna_id and mirna_db are not provided), the chromosome strand needs to be specified","script":"if ( (mirna_db == '-777' || mirna_db == '-888') && (mirna_id == '-777' || mirna_id == '-888') ) { if ((chromosome_strand == '-777') || (chromosome_strand == '-888')) { return false } else { return true } } else { return true }"}}],"controlled":false},{"name":"verification_status","label":"Indicate if the detected miRNA has been verified using an independent orthogonal genotype platform/technology","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"codelist","config":{"name":"GLOBAL.0.verification_status.v2"}}],"controlled":false},{"name":"verification_platform","label":"Identifier of orthogonal platform or technology used to confirm that the detected miRNA  is true; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"codelist","config":{"name":"GLOBAL.0.platform.v1"}},{"type":"script","config":{"description":"If detected miRNA is verified, the verification platform must be specified (cannot be -777/-888)","script":"if ( (verification_status == '1' || verification_status == 'tested and verified') && verification_platform == null ) { return false } else { return true }"}}],"controlled":false}],"relations":[{"fields":["analysis_id","analyzed_sample_id"],"bidirectional":true,"other":"mirna_seq_m","otherFields":["analysis_id","analyzed_sample_id"],"optionals":[]}]},{"name":"exp_seq_m","label":"Sequencing-based Gene Expression (exp_seq) - Analysis Metadata File (m)","pattern":"^exp_seq_m(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":["analysis_id","analyzed_sample_id"],"fields":[{"name":"analysis_id","label":"Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"hnc_12, CCG_34_94583, BRCA47832-3239","pattern":"^[\\w+\\-\\_]+$"}}],"controlled":false},{"name":"analyzed_sample_id","label":"A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"ov-45, 90343a, BRCAZ-TG","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"analyzed_sample_id cannot begin with 'SA*'. This prefix is reserved for ICGC IDs","script":"if (analyzed_sample_id ~= '(S|s)(A|a).*') { return false } return true"}}],"controlled":false},{"name":"assembly_version","label":"Version of human reference genome assembly used in the analysis; specify the version used in alignments, or associated with the particular platform used","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.assembly_version.v2"}}],"controlled":false},{"name":"platform","label":"Identifier of platform or technology used for analysis or verification; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.platform.v1"}}],"controlled":false},{"name":"total_read_count","label":"Total number of reads from RNA-Seq, an indication of sequencing depth","valueType":"INTEGER","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"experimental_protocol","label":"Name of experimental protocol and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"Paired End http://www.illumina.com/technology/paired_end_sequencing_assay.ilmn","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.]|ftp://)[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":false},{"name":"alignment_algorithm","label":"Name of alignment algorithm and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"BWA 0.6.2 http://bio-bwa.sourceforge.net bwa aln -q20 HGref s1.fastq > s1_bwa.sai","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.])[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":false},{"name":"normalization_algorithm","label":"Name of normalization algorithm and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"Cufflinks 2.1.0 http://cufflinks.cbcb.umd.edu","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.])[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":false},{"name":"other_analysis_algorithm","label":"Names of other analysis algorithms. Separate multiple algorithms by commas.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[],"controlled":false},{"name":"sequencing_strategy","label":"Sequencing technique intended for the analyzed sample library.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.sequencing_strategy.v1"}}],"controlled":false},{"name":"raw_data_repository","label":"Public repository where raw data is submitted","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.raw_data_repository.v2"}}],"controlled":false},{"name":"raw_data_accession","label":"Accession for referencing the raw data at the public repository","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"script","config":{"description":"Format of raw data accession must match the format required by the raw data repository","script":"EGA = (raw_data_repository == '1' || raw_data_repository == 'EGA'); dbSNP = (raw_data_repository == '2' || raw_data_repository == 'dbSNP'); TCGA = (raw_data_repository == '3' || raw_data_repository == 'TCGA'); CGHub = (raw_data_repository == '4' || raw_data_repository == 'CGHub'); GEO = (raw_data_repository == '5' || raw_data_repository == 'GEO'); TARGET = (raw_data_repository == '6' || raw_data_repository == 'TARGET'); if (EGA) { raw_data_accession ~= '(?iu)EGA[DS][0-9]{11}|((?iu)EGA[S][0-9]{11})?([:])?((?iu)EGA[D][0-9]{11})?([:](?iu)EGA[N][0-9]{11})?(([:](?iu)EGA[X][0-9]{11})+)?(([:](?iu)EGA[R][0-9]{11})+)?(([:](?iu)EGA[F][0-9]{11})+)?' } else if (GEO) { raw_data_accession ~= '(G(SE|DS|SM)[0-9]+)((([,])(G(SE|DS|SM)[0-9]+))+)?' } else if (TCGA) { raw_data_accession ~= 'TCGA-[A-Za-z0-9_-]+'} else if (CGHub) { raw_data_accession ~= '[A-Fa-f0-9-]+' } else if (dbSNP) { raw_data_accession ~= '[A-Za-z0-9_-]+.*' } else if (TARGET) { raw_data_accession ~= 'ftp://caftpd.nci.nih.gov/pub/dcc_target/[A-Za-z0-9/_.-]+'} else { return false }"}}],"controlled":false},{"name":"reference_sample_type","label":"Type of sample used as reference for calculating fold change","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"GLOBAL.0.reference_sample_type.v1"}}],"controlled":false}],"relations":[{"fields":["analyzed_sample_id"],"bidirectional":false,"other":"sample","otherFields":["analyzed_sample_id"],"optionals":[]}]},{"name":"exp_seq_p","label":"Sequencing-based Gene Expression (exp_seq) - Primary File (p)","pattern":"^exp_seq_p(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":["analysis_id","analyzed_sample_id","gene_model","gene_id"],"fields":[{"name":"analysis_id","label":"Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"hnc_12, CCG_34_94583, BRCA47832-3239","pattern":"^[\\w+\\-\\_]+$"}}],"controlled":false},{"name":"analyzed_sample_id","label":"A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"ov-45, 90343a, BRCAZ-TG","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"analyzed_sample_id cannot begin with 'SA*'. This prefix is reserved for ICGC IDs","script":"if (analyzed_sample_id ~= '(S|s)(A|a).*') { return false } return true"}}],"controlled":false},{"name":"gene_model","label":"Gene model used","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.gene_db.v1"}}],"controlled":false},{"name":"gene_id","label":"Gene ID provided in the chosen gene model, eg, ENSG00000157764","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":false}}],"controlled":false},{"name":"normalized_read_count","label":"Normalized read count for the current gene","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":false}}],"controlled":false},{"name":"raw_read_count","label":"Raw read count for the current gene","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":false}}],"controlled":false},{"name":"fold_change","label":"Gene expression fold change","valueType":"DECIMAL","summaryType":null,"restrictions":[],"controlled":false}],"relations":[{"fields":["analysis_id","analyzed_sample_id"],"bidirectional":true,"other":"exp_seq_m","otherFields":["analysis_id","analyzed_sample_id"],"optionals":[]}]},{"name":"exp_array_m","label":"Array-based Gene Expression (exp_array) - Analysis Metadata File (m)","pattern":"^exp_array_m(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":["analysis_id","analyzed_sample_id"],"fields":[{"name":"analysis_id","label":"Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"hnc_12, CCG_34_94583, BRCA47832-3239","pattern":"^[\\w+\\-\\_]+$"}}],"controlled":false},{"name":"analyzed_sample_id","label":"A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"ov-45, 90343a, BRCAZ-TG","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"analyzed_sample_id cannot begin with 'SA*'. This prefix is reserved for ICGC IDs","script":"if (analyzed_sample_id ~= '(S|s)(A|a).*') { return false } return true"}}],"controlled":false},{"name":"platform","label":"Identifier of platform or technology used for analysis or verification; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.platform.v1"}}],"controlled":false},{"name":"experimental_protocol","label":"Name of experimental protocol and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"Paired End http://www.illumina.com/technology/paired_end_sequencing_assay.ilmn","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.]|ftp://)[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":false},{"name":"normalization_algorithm","label":"Name of normalization algorithm and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"RPKM http://www.ncbi.nlm.nih.gov/pubmed/18516045","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.])[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":false},{"name":"other_analysis_algorithm","label":"Names of other analysis algorithms.  Separate multiple algorithms by commas.","valueType":"TEXT","summaryType":null,"restrictions":[],"controlled":false},{"name":"raw_data_repository","label":"Public repository where raw data is submitted","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.raw_data_repository.v2"}}],"controlled":false},{"name":"raw_data_accession","label":"Accession for referencing the raw data at the public repository","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"script","config":{"description":"Format of raw data accession must match the format required by the raw data repository","script":"EGA = (raw_data_repository == '1' || raw_data_repository == 'EGA'); dbSNP = (raw_data_repository == '2' || raw_data_repository == 'dbSNP'); TCGA = (raw_data_repository == '3' || raw_data_repository == 'TCGA'); CGHub = (raw_data_repository == '4' || raw_data_repository == 'CGHub'); GEO = (raw_data_repository == '5' || raw_data_repository == 'GEO'); TARGET = (raw_data_repository == '6' || raw_data_repository == 'TARGET'); if (EGA) { raw_data_accession ~= '(?iu)EGA[DS][0-9]{11}|((?iu)EGA[S][0-9]{11})?([:])?((?iu)EGA[D][0-9]{11})?([:](?iu)EGA[N][0-9]{11})?(([:](?iu)EGA[X][0-9]{11})+)?(([:](?iu)EGA[R][0-9]{11})+)?(([:](?iu)EGA[F][0-9]{11})+)?' } else if (GEO) { raw_data_accession ~= '(G(SE|DS|SM)[0-9]+)((([,])(G(SE|DS|SM)[0-9]+))+)?' } else if (TCGA) { raw_data_accession ~= 'TCGA-[A-Za-z0-9_-]+'} else if (CGHub) { raw_data_accession ~= '[A-Fa-f0-9-]+' } else if (dbSNP) { raw_data_accession ~= '[A-Za-z0-9_-]+.*' } else if (TARGET) { raw_data_accession ~= 'ftp://caftpd.nci.nih.gov/pub/dcc_target/[A-Za-z0-9/_.-]+'} else { return false }"}}],"controlled":false},{"name":"reference_sample_type","label":"Type of sample used as reference for calculating fold change","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"GLOBAL.0.reference_sample_type.v1"}}],"controlled":false}],"relations":[{"fields":["analyzed_sample_id"],"bidirectional":false,"other":"sample","otherFields":["analyzed_sample_id"],"optionals":[]}]},{"name":"exp_array_p","label":"Array-based Gene Expression (exp_array) - Primary File (p)","pattern":"^exp_array_p(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":["analysis_id","analyzed_sample_id","gene_model","gene_id"],"fields":[{"name":"analysis_id","label":"Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"hnc_12, CCG_34_94583, BRCA47832-3239","pattern":"^[\\w+\\-\\_]+$"}}],"controlled":false},{"name":"analyzed_sample_id","label":"A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"ov-45, 90343a, BRCAZ-TG","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"analyzed_sample_id cannot begin with 'SA*'. This prefix is reserved for ICGC IDs","script":"if (analyzed_sample_id ~= '(S|s)(A|a).*') { return false } return true"}}],"controlled":false},{"name":"gene_model","label":"Gene model used","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.gene_db.v1"}}],"controlled":false},{"name":"gene_id","label":"Gene ID provided in the chosen gene model, eg, ENSG00000157764","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":false}}],"controlled":false},{"name":"normalized_expression_value","label":"Normalized gene expression value","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":false}}],"controlled":false},{"name":"fold_change","label":"Gene expression fold change","valueType":"DECIMAL","summaryType":null,"restrictions":[],"controlled":false}],"relations":[{"fields":["analysis_id","analyzed_sample_id"],"bidirectional":true,"other":"exp_array_m","otherFields":["analysis_id","analyzed_sample_id"],"optionals":[]}]},{"name":"meth_array_m","label":"Array-based DNA Methylation (meth_array) - Analysis Metadata File (m)","pattern":"^meth_array_m(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":["analysis_id","analyzed_sample_id"],"fields":[{"name":"analysis_id","label":"Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"pattern":"^([\\w+\\-\\_]+)$"}}],"controlled":false},{"name":"analyzed_sample_id","label":"A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"pattern":"^([\\w+\\-\\_]+)$"}},{"type":"script","config":{"description":"analyzed_sample_id cannot begin with 'SA*'. This prefix is reserved for ICGC IDs","script":"if (analyzed_sample_id ~= '(S|s)(A|a).*') { return false } return true"}}],"controlled":false},{"name":"fraction_wg_cpg_sites_covered","label":"fraction of whole genome CpG sites is covered in the assay","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[],"controlled":false},{"name":"conversion_rate","label":"bisulfite conversion rate","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[],"controlled":false},{"name":"experimental_protocol","label":"Name of experimental protocol and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"example":"WGBS MethylC-seq http://www.nature.com/nature/journal/v471/n7336/full/nature09798.html","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.]|ftp://)[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":false},{"name":"other_analysis_algorithm","label":"Names of other analysis algorithms.  Separate multiple algorithms by commas.","valueType":"TEXT","summaryType":null,"restrictions":[],"controlled":false},{"name":"raw_data_repository","label":"Public repository where raw data is submitted","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.raw_data_repository.v2"}}],"controlled":false},{"name":"raw_data_accession","label":"Accession for referencing the raw data at the public repository","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"script","config":{"description":"Format of raw data accession must match the format required by the raw data repository","script":"EGA = (raw_data_repository == '1' || raw_data_repository == 'EGA'); dbSNP = (raw_data_repository == '2' || raw_data_repository == 'dbSNP'); TCGA = (raw_data_repository == '3' || raw_data_repository == 'TCGA'); CGHub = (raw_data_repository == '4' || raw_data_repository == 'CGHub'); GEO = (raw_data_repository == '5' || raw_data_repository == 'GEO'); TARGET = (raw_data_repository == '6' || raw_data_repository == 'TARGET'); if (EGA) { raw_data_accession ~= '(?iu)EGA[DS][0-9]{11}|((?iu)EGA[S][0-9]{11})?([:])?((?iu)EGA[D][0-9]{11})?([:](?iu)EGA[N][0-9]{11})?(([:](?iu)EGA[X][0-9]{11})+)?(([:](?iu)EGA[R][0-9]{11})+)?(([:](?iu)EGA[F][0-9]{11})+)?' } else if (GEO) { raw_data_accession ~= '(G(SE|DS|SM)[0-9]+)((([,])(G(SE|DS|SM)[0-9]+))+)?' } else if (TCGA) { raw_data_accession ~= 'TCGA-[A-Za-z0-9_-]+'} else if (CGHub) { raw_data_accession ~= '[A-Fa-f0-9-]+' } else if (dbSNP) { raw_data_accession ~= '[A-Za-z0-9_-]+.*' } else if (TARGET) { raw_data_accession ~= 'ftp://caftpd.nci.nih.gov/pub/dcc_target/[A-Za-z0-9/_.-]+'} else { return false }"}}],"controlled":false}],"relations":[{"fields":["analyzed_sample_id"],"bidirectional":false,"other":"sample","otherFields":["analyzed_sample_id"],"optionals":[]}]},{"name":"meth_array_p","label":"Array-based DNA Methylation (meth_array) - Primary File (p)","pattern":"^meth_array_p(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":[],"fields":[{"name":"analysis_id","label":"Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"hnc_12, CCG_34_94583, BRCA47832-3239","pattern":"^[\\w+\\-\\_]+$"}}],"controlled":false},{"name":"analyzed_sample_id","label":"A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"ov-45, 90343a, BRCAZ-TG","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"analyzed_sample_id cannot begin with 'SA*'. This prefix is reserved for ICGC IDs","script":"if (analyzed_sample_id ~= '(S|s)(A|a).*') { return false } return true"}}],"controlled":false},{"name":"array_platform","label":"Controlled vocabulary for methylation array platform","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.meth_array_platform.v2"}}],"controlled":false},{"name":"probe_id","label":"Methylation array probe ID","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":false}}],"controlled":false},{"name":"methylation_value","label":"Methylation value","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":false}}],"controlled":false},{"name":"metric_used","label":"Metric used","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.methylation_metric.v1"}}],"controlled":false},{"name":"methylated_probe_intensity","label":"Methylated probe intensity (Ex. Illumina Signal A)","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[],"controlled":false},{"name":"unmethylated_probe_intensity","label":"Unmethylated probe intensity (Ex. Illumina Signal B)","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[],"controlled":false},{"name":"verification_status","label":"Indicate if the methylation status has been verified using an independent orthogonal genotype platform/technology","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"codelist","config":{"name":"GLOBAL.0.verification_status.v2"}}],"controlled":false},{"name":"verification_platform","label":"Identifier of orthogonal platform or technology used to confirm that the methylation status is true; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"codelist","config":{"name":"GLOBAL.0.platform.v1"}},{"type":"script","config":{"description":"If mutation is verified, the verification platform must be specified (cannot be -777/-888)","script":"if ( (verification_status == '1' || verification_status == 'tested and verified') && verification_platform == null ) { return false } else { return true }"}}],"controlled":false}],"relations":[{"fields":["analysis_id","analyzed_sample_id"],"bidirectional":true,"other":"meth_array_m","otherFields":["analysis_id","analyzed_sample_id"],"optionals":[]},{"fields":["array_platform","probe_id"],"bidirectional":false,"other":"meth_array_probes","otherFields":["array_platform","probe_id"],"optionals":[]}]},{"name":"meth_array_probes","label":"Array-based DNA Methylation (meth_array) - Probe File (probes)","pattern":"^meth_array_probes(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SYSTEM","uniqueFields":["array_platform","probe_id"],"fields":[{"name":"array_platform","label":"Controlled vocabulary for methylation array platform","valueType":"TEXT","summaryType":null,"restrictions":[],"controlled":false},{"name":"probe_id","label":"Methylation array probe ID","valueType":"TEXT","summaryType":null,"restrictions":[],"controlled":false}],"relations":[]},{"name":"cnsm_p","label":"Copy Number Somatic Mutations (cnsm) - Primary Analysis File (p)","pattern":"^cnsm_p(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":["analysis_id","analyzed_sample_id","mutation_id"],"fields":[{"name":"analysis_id","label":"Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"hnc_12, CCG_34_94583, BRCA47832-3239","pattern":"^[\\w+\\-\\_]+$"}}],"controlled":false},{"name":"analyzed_sample_id","label":"A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"ov-45, 90343a, BRCAZ-TG","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"analyzed_sample_id cannot begin with 'SA*'. This prefix is reserved for ICGC IDs","script":"if (analyzed_sample_id ~= '(S|s)(A|a).*') { return false } return true"}}],"controlled":false},{"name":"mutation_id","label":"Unique identifier assigned to a single mutation observation; must be unique within the scope of all data produced by a project","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"mut19, LH12-fb","pattern":"^[\\w+\\-\\_]+$"}}],"controlled":false},{"name":"start_probe_id","label":"Probe id containing the chromosome_start if array platform was used","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[],"controlled":false},{"name":"end_probe_id","label":"Probe id containing the chromosome_end if array platform was used","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[],"controlled":false},{"name":"chromosome","label":"Name of the chromosome containing the mutation/variation","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.chromosome.v3"}}],"controlled":false},{"name":"chromosome_start","label":"Chromosome start position of the feature being described","valueType":"INTEGER","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"243198475","pattern":"^\\d+$"}},{"type":"script","config":{"description":"Chromosome start position must be equal or greater than 1","script":"lengths = ['1':249250621, '2':243199373, '3':198022430, '4':191154276, '5':180915260, '6':171115067, '7':159138663, '8':146364022, '9':141213431, '10':135534747, '11':135006516, '12':133851895, '13':115169878, '14':107349540, '15':102531392, '16':90354753, '17':81195210, '18':78077248, '19':59128983, '20':63025520, '21':48129895, '22':51304566, 'X':155270560, 'Y':59373566, 'MT':16569]; if (!(chromosome_start >= 1 && chromosome_end <= lengths[chromosome] && chromosome_start <= chromosome_end)) { return false } return true"}}],"controlled":false},{"name":"chromosome_end","label":"Chromosome end position of the feature being described","valueType":"INTEGER","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"243198479","pattern":"^\\d+$"}},{"type":"script","config":{"description":"Chromosome end position must be less than or equal to the length of the chromosome","script":"lengths = ['1':249250621, '2':243199373, '3':198022430, '4':191154276, '5':180915260, '6':171115067, '7':159138663, '8':146364022, '9':141213431, '10':135534747, '11':135006516, '12':133851895, '13':115169878, '14':107349540, '15':102531392, '16':90354753, '17':81195210, '18':78077248, '19':59128983, '20':63025520, '21':48129895, '22':51304566, 'X':155270560, 'Y':59373566, 'MT':16569]; if (!(chromosome_start >= 1 && chromosome_end <= lengths[chromosome] && chromosome_start <= chromosome_end)) { return false } return true"}}],"controlled":false},{"name":"chromosome_start_range","label":"Number of bases around chromosome_start that may contain the start position","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[],"controlled":false},{"name":"chromosome_end_range","label":"Number of bases around chromosome_end that may contain the end position","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[],"controlled":false},{"name":"mutation_type","label":"Type of mutation","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"cnsm_p.0.mutation_type.v1"}}],"controlled":false},{"name":"copy_number","label":"DNA copy number estimated","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"segment_mean","label":"Mean LRR per segment","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"segment_median","label":"Median LRR per segment","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"quality_score","label":"Quality score of the observation","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[],"controlled":false},{"name":"probability","label":"Probability of the observation","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[],"controlled":false},{"name":"is_annotated","label":"Indicate if the mutation/variation is annotated in dbSNP","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"GLOBAL.0.is_annotated.v1"}}],"controlled":false},{"name":"verification_status","label":"Indicate if the mutation/variation has been verified using an independent orthogonal genotype platform/technology","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.verification_status.v2"}}],"controlled":false},{"name":"verification_platform","label":"Identifier of orthogonal platform or technology used to confirm that the mutation/variant is true; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"GLOBAL.0.platform.v1"}},{"type":"script","config":{"description":"If mutation is verified, the verification platform must be specified (cannot be -777/-888)","script":"if ( (verification_status == '1' || verification_status == 'tested and verified') && verification_platform == null ) { return false } else { return true }"}}],"controlled":false},{"name":"biological_validation_status","label":"Indicate if the mutation/variation has been observed in a larger cohort/sample size, and is not an artifact or consequence of sample selection for sequencing","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"GLOBAL.0.biological_validation_status.v3"}}],"controlled":false},{"name":"biological_validation_platform","label":"Identifier of assay platform or technology used to validate the mutation/variant","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"GLOBAL.0.platform.v1"}},{"type":"script","config":{"description":"If mutation is biologically validated, the biological validation platform must be specified","script":"if (biological_validation_status == '1' || biological_validation_status == 'tested and valid') { biological_validation_platform != '-777' && biological_validation_platform != '-888' } else { return true }"}}],"controlled":false}],"relations":[{"fields":["analysis_id","analyzed_sample_id"],"bidirectional":true,"other":"cnsm_m","otherFields":["analysis_id","analyzed_sample_id"],"optionals":[]}]},{"name":"cnsm_s","label":"Copy Number Somatic Mutations (cnsm) - Secondary Analysis File (s)","pattern":"^cnsm_s(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":[],"fields":[{"name":"analysis_id","label":"Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"hnc_12, CCG_34_94583, BRCA47832-3239","pattern":"^[\\w+\\-\\_]+$"}}],"controlled":false},{"name":"analyzed_sample_id","label":"A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"ov-45, 90343a, BRCAZ-TG","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"analyzed_sample_id cannot begin with 'SA*'. This prefix is reserved for ICGC IDs","script":"if (analyzed_sample_id ~= '(S|s)(A|a).*') { return false } return true"}}],"controlled":false},{"name":"mutation_id","label":"Unique identifier assigned to a single mutation observation; must be unique within the scope of all data produced by a project","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"mut19, LH12-fb","pattern":"^[\\w+\\-\\_]+$"}}],"controlled":false},{"name":"gene_affected","label":"Gene(s) containing the mutation/variation.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[],"controlled":false},{"name":"transcript_affected","label":"Transcript(s) containing the mutation/variation.  Use Ensembl transcript id.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[],"controlled":false},{"name":"gene_build_version","label":"Gene build version associated with the platform, tools or other methods used in the analysis; Supports the following syntax: 'DB:VERSION'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"Ensembl:69","pattern":"^(\\w+)\\:(\\w+)$"}}],"controlled":false}],"relations":[{"fields":["analysis_id","analyzed_sample_id","mutation_id"],"bidirectional":false,"other":"cnsm_p","otherFields":["analysis_id","analyzed_sample_id","mutation_id"],"optionals":[]}]},{"name":"cnsm_m","label":"Copy Number Somatic Mutations (cnsm) - Analysis Metadata File (m)","pattern":"^cnsm_m(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":["analysis_id","analyzed_sample_id"],"fields":[{"name":"analysis_id","label":"Unique identifier assigned to a computational analysis run that was performed on a single analyzed non-normal sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"hnc_12, CCG_34_94583, BRCA47832-3239","pattern":"^[\\w+\\-\\_]+$"}}],"controlled":false},{"name":"analyzed_sample_id","label":"A unique identifier representing the particular non-normal sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"ov-45, 90343a, BRCAZ-TG","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"analyzed_sample_id cannot begin with 'SA*'. This prefix is reserved for ICGC IDs","script":"if (analyzed_sample_id ~= '(S|s)(A|a).*') { return false } return true"}}],"controlled":false},{"name":"matched_sample_id","label":"Unique identifier for the matched normal sample used in the analysis; must exist in the sample file","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"mut19, LH12-fb","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"The sample identifiers used for matched_sample_id and analyzed_sample_id cannot be identical","script":"if (analyzed_sample_id == matched_sample_id) { return false } return true"}}],"controlled":false},{"name":"assembly_version","label":"Version of human reference genome assembly used in the analysis; specify the version used in alignments, or associated with the particular platform used","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.assembly_version.v2"}}],"controlled":false},{"name":"platform","label":"Identifier of platform or technology used for analysis or verification; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.platform.v1"}}],"controlled":false},{"name":"experimental_protocol","label":"Name of experimental protocol and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"Paired End http://www.illumina.com/technology/paired_end_sequencing_assay.ilmn","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.]|ftp://)[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":false},{"name":"base_calling_algorithm","label":"Name of base calling algorithm and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"CASAVA http://support.illumina.com/sequencing/sequencing_software/casava.ilmn","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.])[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":false},{"name":"alignment_algorithm","label":"Name of alignment algorithm and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"Tophat 2.0.10 http://tophat.cbcb.umd.edu tophat -p 3 -o s1_guided -G BH_WGS.gtf --no-novel-juncs sequence.txt","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.])[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":false},{"name":"variation_calling_algorithm","label":"Name of variation calling algorithm and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"Samtools http://samtools.sourceforge.net","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.])[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":false},{"name":"other_analysis_algorithm","label":"Names of other analysis algorithms.  Separate multiple algorithms by commas.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[],"controlled":false},{"name":"sequencing_strategy","label":"Sequencing technique intended for the analyzed sample library. Use of N/A reserved for when a non-sequencing strategy is used (example: comparative hybridization array)","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.sequencing_strategy.v1"}}],"controlled":false},{"name":"seq_coverage","label":"Sequence coverage if analyzed by sequencing platforms","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[],"controlled":false},{"name":"raw_data_repository","label":"Public repository where raw data is submitted","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.raw_data_repository.v2"}}],"controlled":false},{"name":"raw_data_accession","label":"Accession for referencing the raw data at the public repository","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"script","config":{"description":"Format of raw data accession must match the format required by the raw data repository","script":"EGA = (raw_data_repository == '1' || raw_data_repository == 'EGA'); dbSNP = (raw_data_repository == '2' || raw_data_repository == 'dbSNP'); TCGA = (raw_data_repository == '3' || raw_data_repository == 'TCGA'); CGHub = (raw_data_repository == '4' || raw_data_repository == 'CGHub'); GEO = (raw_data_repository == '5' || raw_data_repository == 'GEO'); TARGET = (raw_data_repository == '6' || raw_data_repository == 'TARGET'); if (EGA) { raw_data_accession ~= '(?iu)EGA[DS][0-9]{11}|((?iu)EGA[S][0-9]{11})?([:])?((?iu)EGA[D][0-9]{11})?([:](?iu)EGA[N][0-9]{11})?(([:](?iu)EGA[X][0-9]{11})+)?(([:](?iu)EGA[R][0-9]{11})+)?(([:](?iu)EGA[F][0-9]{11})+)?' } else if (GEO) { raw_data_accession ~= '(G(SE|DS|SM)[0-9]+)((([,])(G(SE|DS|SM)[0-9]+))+)?' } else if (TCGA) { raw_data_accession ~= 'TCGA-[A-Za-z0-9_-]+'} else if (CGHub) { raw_data_accession ~= '[A-Fa-f0-9-]+' } else if (dbSNP) { raw_data_accession ~= '[A-Za-z0-9_-]+.*' } else if (TARGET) { raw_data_accession ~= 'ftp://caftpd.nci.nih.gov/pub/dcc_target/[A-Za-z0-9/_.-]+'} else { return false }"}}],"controlled":false}],"relations":[{"fields":["analyzed_sample_id"],"bidirectional":false,"other":"sample","otherFields":["analyzed_sample_id"],"optionals":[]},{"fields":["matched_sample_id"],"bidirectional":false,"other":"sample","otherFields":["analyzed_sample_id"],"optionals":[]}]},{"name":"pexp_p","label":"Protein Expression (pexp) - Primary Analysis File (p)","pattern":"^pexp_p(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":[],"fields":[{"name":"analysis_id","label":"Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"hnc_12, CCG_34_94583, BRCA47832-3239","pattern":"^[\\w+\\-\\_]+$"}}],"controlled":false},{"name":"analyzed_sample_id","label":"A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"ov-45, 90343a, BRCAZ-TG","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"analyzed_sample_id cannot begin with 'SA*'. This prefix is reserved for ICGC IDs","script":"if (analyzed_sample_id ~= '(S|s)(A|a).*') { return false } return true"}}],"controlled":false},{"name":"antibody_id","label":"ID of the antibody probe used in expression platform","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}}],"controlled":false},{"name":"gene_name","label":"For providing HGNC approved gene symbol or ID use the DB Xref syntax: 'HGNC:x'","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}}],"controlled":false},{"name":"gene_stable_id","label":"For providing Ensembl gene or transcript annotation use the DB Xref syntax: 'Ensembl:ENSGxxx'","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"gene_build_version","label":"Gene build version associated with the platform, tools or other methods used in the analysis; Supports the following syntax: 'DB:VERSION'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"Ensembl:69","pattern":"^(\\w+)\\:(\\w+)$"}}],"controlled":false},{"name":"normalized_expression_level","label":"Normalized expression level","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":false}}],"controlled":false},{"name":"verification_status","label":"Indicate if the mutation/variation has been verified using an independent orthogonal genotype platform/technology","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.verification_status.v2"}}],"controlled":false},{"name":"verification_platform","label":"Identifier of orthogonal platform or technology used to confirm that the mutation/variant is true; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"GLOBAL.0.platform.v1"}},{"type":"script","config":{"description":"If mutation is verified, the verification platform must be specified (cannot be -777/-888)","script":"if ( (verification_status == '1' || verification_status == 'tested and verified') && verification_platform == null ) { return false } else { return true }"}}],"controlled":false},{"name":"biological_validation_status","label":"Indicate if the mutation/variation has been observed in a larger cohort/sample size, and is not an artifact or consequence of sample selection for sequencing","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"GLOBAL.0.biological_validation_status.v3"}}],"controlled":false},{"name":"biological_validation_platform","label":"Identifier of assay platform or technology used to validate the mutation/variant","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"GLOBAL.0.platform.v1"}},{"type":"script","config":{"description":"If mutation is biologically validated, the biological validation platform must be specified","script":"if (biological_validation_status == '1' || biological_validation_status == 'tested and valid') { biological_validation_platform != '-777' && biological_validation_platform != '-888' } else { return true }"}}],"controlled":false}],"relations":[{"fields":["analysis_id","analyzed_sample_id"],"bidirectional":true,"other":"pexp_m","otherFields":["analysis_id","analyzed_sample_id"],"optionals":[]}]},{"name":"pexp_m","label":"Protein Expression (pexp) - Analysis Metadata File (m)","pattern":"^pexp_m(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":["analysis_id","analyzed_sample_id"],"fields":[{"name":"analysis_id","label":"Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"hnc_12, CCG_34_94583, BRCA47832-3239","pattern":"^[\\w+\\-\\_]+$"}}],"controlled":false},{"name":"analyzed_sample_id","label":"A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"ov-45, 90343a, BRCAZ-TG","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"analyzed_sample_id cannot begin with 'SA*'. This prefix is reserved for ICGC IDs","script":"if (analyzed_sample_id ~= '(S|s)(A|a).*') { return false } return true"}}],"controlled":false},{"name":"platform","label":"Identifier of platform or technology used for analysis or verification; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.platform.v1"}}],"controlled":false},{"name":"experimental_protocol","label":"Name of experimental protocol and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"Paired End http://www.illumina.com/technology/paired_end_sequencing_assay.ilmn","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.]|ftp://)[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":false},{"name":"raw_data_repository","label":"Public repository where raw data is submitted","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.raw_data_repository.v2"}}],"controlled":false},{"name":"raw_data_accession","label":"Accession for referencing the raw data at the public repository","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"script","config":{"description":"Format of raw data accession must match the format required by the raw data repository","script":"EGA = (raw_data_repository == '1' || raw_data_repository == 'EGA'); dbSNP = (raw_data_repository == '2' || raw_data_repository == 'dbSNP'); TCGA = (raw_data_repository == '3' || raw_data_repository == 'TCGA'); CGHub = (raw_data_repository == '4' || raw_data_repository == 'CGHub'); GEO = (raw_data_repository == '5' || raw_data_repository == 'GEO'); TARGET = (raw_data_repository == '6' || raw_data_repository == 'TARGET'); if (EGA) { raw_data_accession ~= '(?iu)EGA[DS][0-9]{11}|((?iu)EGA[S][0-9]{11})?([:])?((?iu)EGA[D][0-9]{11})?([:](?iu)EGA[N][0-9]{11})?(([:](?iu)EGA[X][0-9]{11})+)?(([:](?iu)EGA[R][0-9]{11})+)?(([:](?iu)EGA[F][0-9]{11})+)?' } else if (GEO) { raw_data_accession ~= '(G(SE|DS|SM)[0-9]+)((([,])(G(SE|DS|SM)[0-9]+))+)?' } else if (TCGA) { raw_data_accession ~= 'TCGA-[A-Za-z0-9_-]+'} else if (CGHub) { raw_data_accession ~= '[A-Fa-f0-9-]+' } else if (dbSNP) { raw_data_accession ~= '[A-Za-z0-9_-]+.*' } else if (TARGET) { raw_data_accession ~= 'ftp://caftpd.nci.nih.gov/pub/dcc_target/[A-Za-z0-9/_.-]+'} else { return false }"}}],"controlled":false}],"relations":[{"fields":["analyzed_sample_id"],"bidirectional":false,"other":"sample","otherFields":["analyzed_sample_id"],"optionals":[]}]},{"name":"sgv_p","label":"Simple Germline Variation (sgv) - Primary Analysis File (p)","pattern":"^sgv_p(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":[],"fields":[{"name":"analysis_id","label":"Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"hnc_12, CCG_34_94583, BRCA47832-3239","pattern":"^[\\w+\\-\\_]+$"}}],"controlled":true},{"name":"analyzed_sample_id","label":"A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"ov-45, 90343a, BRCAZ-TG","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"analyzed_sample_id cannot begin with 'SA*'. This prefix is reserved for ICGC IDs","script":"if (analyzed_sample_id ~= '(S|s)(A|a).*') { return false } return true"}}],"controlled":true},{"name":"variant_type","label":"A controlled vocabulary term describing the type of the observed variant","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"sgv_p.0.variant_type.v1"}}],"controlled":true},{"name":"chromosome","label":"Name of the chromosome containing the mutation/variation without the chr prefix","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.chromosome.v3"}}],"controlled":true},{"name":"chromosome_start","label":"Chromosome start position of the feature being described","valueType":"INTEGER","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"405343492","pattern":"^\\d+$"}},{"type":"script","config":{"description":"Chromosome start position must be less than or equal to the chromosome end position. If single-base substution or insertion, the chromosome start position must equal the chromosome end position. If variant is a deletion or multiple-base substitution, then the difference between the chromosome end and start position must be less than or equal to 200.","script":"lengths = ['1':249250621, '2':243199373, '3':198022430, '4':191154276, '5':180915260, '6':171115067, '7':159138663, '8':146364022, '9':141213431, '10':135534747, '11':135006516, '12':133851895, '13':115169878, '14':107349540, '15':102531392, '16':90354753, '17':81195210, '18':78077248, '19':59128983, '20':63025520, '21':48129895, '22':51304566, 'X':155270560, 'Y':59373566, 'MT':16569]; mismatch = (variant_type == '1' || variant_type == 'single base substitution'); insertion = (variant_type == '2' || variant_type == 'insertion of <= 200 bp'); deletion = (variant_type == '3' || variant_type == 'deletion of <= 200 bp'); multiple_base_substitution = (variant_type == '4' || variant_type == 'multiple base substitution (>= 2bp and <= 200bp)'); if (!(chromosome_start >= 1 && chromosome_end <= lengths[chromosome] && chromosome_start <= chromosome_end)) { return false } if (mismatch || insertion) {chromosome_start == chromosome_end } else if (deletion || multiple_base_substitution) { chromosome_end - chromosome_start + 1 <= 200 } else { return false }"}}],"controlled":true},{"name":"chromosome_end","label":"Chromosome end position of the feature being described","valueType":"INTEGER","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"405343499","pattern":"^\\d+$"}},{"type":"script","config":{"description":"Chromosome end position must be less than or equal to the chromosome length. If single-base substution or insertion, the chromosome start position must equal the chromosome end position. If variant is a deletion or multiple-base substitution, then the difference between the chromosome end and start position must be less than or equal to 200.","script":"lengths = ['1':249250621, '2':243199373, '3':198022430, '4':191154276, '5':180915260, '6':171115067, '7':159138663, '8':146364022, '9':141213431, '10':135534747, '11':135006516, '12':133851895, '13':115169878, '14':107349540, '15':102531392, '16':90354753, '17':81195210, '18':78077248, '19':59128983, '20':63025520, '21':48129895, '22':51304566, 'X':155270560, 'Y':59373566, 'MT':16569]; mismatch = (variant_type == '1' || variant_type == 'single base substitution'); insertion = (variant_type == '2' || variant_type == 'insertion of <= 200 bp'); deletion = (variant_type == '3' || variant_type == 'deletion of <= 200 bp'); multiple_base_substitution = (variant_type == '4' || variant_type == 'multiple base substitution (>= 2bp and <= 200bp)'); if (!(chromosome_start >= 1 && chromosome_end <= lengths[chromosome] && chromosome_start <= chromosome_end)) { return false } if (mismatch || insertion) {chromosome_start == chromosome_end } else if (deletion || multiple_base_substitution) { chromosome_end - chromosome_start + 1 <= 200 } else { return false }"}}],"controlled":true},{"name":"chromosome_strand","label":"Chromosome strand of mutation. Must always use forward strand (1)","valueType":"INTEGER","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"1","pattern":"^(1)$"}}],"controlled":true},{"name":"reference_genome_allele","label":"Allele in the reference genome. For insertions, use a dash sign for a missing base. For all other types of variations, use forward strand DNA sequence at the reference genome position as specified in chromosome, chromosome_start and chromosome_end","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"GA, -, TCTT","pattern":"(?iu)^([ATGC\\-]+$){1,200}"}}],"controlled":true},{"name":"genotype","label":"Genotype of the control sample. Use a dash for each missing allele.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"GA/GA, -/-, TCTT/TCTT","pattern":"(?iu)^([ATGC\\-]+/[ATGC\\-]+)$"}}],"controlled":true},{"name":"variant_allele","label":"The allele in genotype that is different from reference_genome_allele","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptingMissingCode":false}},{"type":"regex","config":{"examples":"-, T","pattern":"(?iu)^([ATGC\\-]+$){1,200}"}},{"type":"script","config":{"description":"The allele in this field must be one of the alleles defined in genotype field. If variation is a deletion, the allele must be represented as a dash. Otherwise, for all other variations, the allele must be represented as either A,C,T or G. For a mismatch mutation, only one base must be provided. For insertions and multiple base substitutions, the length of the variant_allele must be between 1-200. If variatio is a multiple base substitution, the length of variant_allele and reference_genome_allele cannot both be 1. The allele specified in variant_allele must not be the same as the allele specified in reference_genome_allele","script":"mismatch = (variant_type == '1' || variant_type == 'single base substitution'); insertion = (variant_type == '2' || variant_type == 'insertion of <= 200 bp'); deletion = (variant_type == '3' || variant_type == 'deletion of <= 200 bp'); multiple_base_substitution = (variant_type == '4' || variant_type == 'multiple base substitution (>= 2bp and <= 200bp)'); length_of_variant_allele = variant_allele.length(); length_of_reference_genome_allele = reference_genome_allele.length(); genotypeAlleles = genotype.split('/'); if (!(genotypeAlleles contains variant_allele)) { return false } if (deletion && (variant_allele != '-')) { return false } if ( (mismatch || insertion || multiple_base_substitution) && !(variant_allele ~='[ACTG]+') ) { return false } if (mismatch && length_of_variant_allele != 1) { return false } if ( (insertion || multiple_base_substitution) && (length_of_variant_allele < 1 || length_of_variant_allele > 200) ){ return false } if (multiple_base_substitution) { !(length_of_variant_allele == 1 && length_of_reference_genome_allele == 1) } if (variant_allele == reference_genome_allele) { return false } return true"}}],"controlled":true},{"name":"quality_score","label":"Quality score of the observation","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[],"controlled":true},{"name":"probability","label":"Probability of the observation","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[],"controlled":true},{"name":"total_read_count","label":"Total number of raw reads that cover the base(s) where the variation occurs","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":true},{"name":"variant_allele_read_count","label":"Total number of raw reads that contain the variant allele","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"script","config":{"description":"The value for variant allele read count must be less than the value for total read count","script":"if (variant_allele_read_count == null || total_read_count == null) { return true } else { variant_allele_read_count <= total_read_count }"}}],"controlled":true},{"name":"verification_status","label":"Indicate if the mutation/variation has been verified using an independent orthogonal genotype platform/technology","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.verification_status.v2"}}],"controlled":true},{"name":"verification_platform","label":"Identifier of orthogonal platform or technology used to confirm that the mutation/variant is true; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"GLOBAL.0.platform.v1"}},{"type":"script","config":{"description":"If mutation is verified, the verification platform must be specified (cannot be -777/-888)","script":"if ( (verification_status == '1' || verification_status == 'tested and verified') && verification_platform == null ) { return false } else { return true }"}}],"controlled":true}],"relations":[{"fields":["analysis_id","analyzed_sample_id"],"bidirectional":true,"other":"sgv_m","otherFields":["analysis_id","analyzed_sample_id"],"optionals":[]}]},{"name":"sgv_m","label":"Simple Germline Variation (sgv) - Analysis Metadata File (m)","pattern":"^sgv_m(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":["analysis_id","analyzed_sample_id"],"fields":[{"name":"analysis_id","label":"Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"hnc_12, CCG_34_94583, BRCA47832-3239","pattern":"^[\\w+\\-\\_]+$"}}],"controlled":true},{"name":"analyzed_sample_id","label":"A unique identifier representing the particular normal sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files. Cannot contain whitespace, semi-colons or special characterse. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"ov-45, 90343a, BRCAZ-TG","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"analyzed_sample_id cannot begin with 'SA*'. This prefix is reserved for ICGC IDs","script":"if (analyzed_sample_id ~= '(S|s)(A|a).*') { return false } return true"}}],"controlled":true},{"name":"assembly_version","label":"Version of human reference genome assembly used in the analysis; specify the version used in alignments, or associated with the particular platform used","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.assembly_version.v2"}}],"controlled":true},{"name":"platform","label":"Identifier of platform or technology used for analysis or verification; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.platform.v1"}}],"controlled":true},{"name":"experimental_protocol","label":"Name of experimental protocol and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"Paired End http://www.illumina.com/technology/paired_end_sequencing_assay.ilmn","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.]|ftp://)[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":true},{"name":"base_calling_algorithm","label":"Name of base calling algorithm and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"CASAVA http://support.illumina.com/sequencing/sequencing_software/casava.ilmn","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.])[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":true},{"name":"alignment_algorithm","label":"Name of alignment algorithm and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"BWA 0.6.2 http://bio-bwa.sourceforge.net bwa aln -q20 HGref s1.fastq > s1_bwa.sai","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.])[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":true},{"name":"variation_calling_algorithm","label":"Name of variation calling algorithm and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"Samtools http://samtools.sourceforge.net","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.])[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":true},{"name":"other_analysis_algorithm","label":"Names of other analysis algorithms.  Separate multiple algorithms by commas.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[],"controlled":true},{"name":"sequencing_strategy","label":"Sequencing technique intended for the analyzed sample library.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.sequencing_strategy.v1"}}],"controlled":true},{"name":"seq_coverage","label":"Sequence coverage if analyzed by sequencing platforms","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[],"controlled":true},{"name":"raw_data_repository","label":"Public repository where raw data is submitted","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.raw_data_repository.v2"}}],"controlled":true},{"name":"raw_data_accession","label":"Accession for referencing the raw data at the public repository","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"script","config":{"description":"Format of raw data accession must match the format required by the raw data repository","script":"EGA = (raw_data_repository == '1' || raw_data_repository == 'EGA'); dbSNP = (raw_data_repository == '2' || raw_data_repository == 'dbSNP'); TCGA = (raw_data_repository == '3' || raw_data_repository == 'TCGA'); CGHub = (raw_data_repository == '4' || raw_data_repository == 'CGHub'); GEO = (raw_data_repository == '5' || raw_data_repository == 'GEO'); TARGET = (raw_data_repository == '6' || raw_data_repository == 'TARGET'); if (EGA) { raw_data_accession ~= '(?iu)EGA[DS][0-9]{11}|((?iu)EGA[S][0-9]{11})?([:])?((?iu)EGA[D][0-9]{11})?([:](?iu)EGA[N][0-9]{11})?(([:](?iu)EGA[X][0-9]{11})+)?(([:](?iu)EGA[R][0-9]{11})+)?(([:](?iu)EGA[F][0-9]{11})+)?' } else if (GEO) { raw_data_accession ~= '(G(SE|DS|SM)[0-9]+)((([,])(G(SE|DS|SM)[0-9]+))+)?' } else if (TCGA) { raw_data_accession ~= 'TCGA-[A-Za-z0-9_-]+'} else if (CGHub) { raw_data_accession ~= '[A-Fa-f0-9-]+' } else if (dbSNP) { raw_data_accession ~= '[A-Za-z0-9_-]+.*' } else if (TARGET) { raw_data_accession ~= 'ftp://caftpd.nci.nih.gov/pub/dcc_target/[A-Za-z0-9/_.-]+'} else { return false }"}}],"controlled":true}],"relations":[{"fields":["analyzed_sample_id"],"bidirectional":false,"other":"sample","otherFields":["analyzed_sample_id"],"optionals":[]}]},{"name":"ssm_p","label":"Simple Somatic Mutations (ssm) - Primary Analysis File (p)","pattern":"^ssm_p(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":[],"fields":[{"name":"analysis_id","label":"Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"hnc_12, CCG_34_94583, BRCA47832-3239","pattern":"^[\\w+\\-\\_]+$"}}],"controlled":false},{"name":"analyzed_sample_id","label":"A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"ov-45, 90343a, BRCAZ-TG","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"analyzed_sample_id cannot begin with 'SA*'. This prefix is reserved for ICGC IDs","script":"if (analyzed_sample_id ~= '(S|s)(A|a).*') { return false } return true"}}],"controlled":false},{"name":"mutation_type","label":"Type of mutation","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"ssm_p.0.mutation_type.v1"}}],"controlled":false},{"name":"chromosome","label":"Name of the chromosome containing the mutation/variation","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"examples":"10","name":"GLOBAL.0.chromosome.v3"}}],"controlled":false},{"name":"chromosome_start","label":"Chromosome start position of the feature being described","valueType":"INTEGER","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"405343492","pattern":"^\\d+$"}},{"type":"script","config":{"description":"Chromosome start position must be less than or equal to the chromosome end position. If single-base substution or insertion, the chromosome start position must equal the chromosome end position. If mutation is a deletion or multiple-base substitution, then the difference between the chromosome end and start position must be less than or equal to 200.","script":"lengths = ['1':249250621, '2':243199373, '3':198022430, '4':191154276, '5':180915260, '6':171115067, '7':159138663, '8':146364022, '9':141213431, '10':135534747, '11':135006516, '12':133851895, '13':115169878, '14':107349540, '15':102531392, '16':90354753, '17':81195210, '18':78077248, '19':59128983, '20':63025520, '21':48129895, '22':51304566, 'X':155270560, 'Y':59373566, 'MT':16569]; mismatch = (mutation_type == '1' || mutation_type == 'single base substitution'); insertion = (mutation_type == '2' || mutation_type == 'insertion of <=200bp'); deletion = (mutation_type == '3' || mutation_type == 'deletion of <=200bp'); multiple_base_substitution = (mutation_type == '4' || mutation_type == 'multiple base substitution (>=2bp and <=200bp)'); if (!(chromosome_start >= 1 && chromosome_end <= lengths[chromosome] && chromosome_start <= chromosome_end)) { return false } if (mismatch || insertion) {chromosome_start == chromosome_end } else if (deletion || multiple_base_substitution) { chromosome_end - chromosome_start + 1 <= 200 } else { return false }"}}],"controlled":false},{"name":"chromosome_end","label":"Chromosome end position of the feature being described","valueType":"INTEGER","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"405343499","pattern":"^\\d+$"}},{"type":"script","config":{"description":"Chromosome end position must be less than or equal to the chromosome length. If single-base substution or insertion, the chromosome start position must equal the chromosome end position. If mutation is a deletion or multiple-base substitution, then the difference between the chromosome end and start position must be less than or equal to 200.","script":"lengths = ['1':249250621, '2':243199373, '3':198022430, '4':191154276, '5':180915260, '6':171115067, '7':159138663, '8':146364022, '9':141213431, '10':135534747, '11':135006516, '12':133851895, '13':115169878, '14':107349540, '15':102531392, '16':90354753, '17':81195210, '18':78077248, '19':59128983, '20':63025520, '21':48129895, '22':51304566, 'X':155270560, 'Y':59373566, 'MT':16569]; mismatch = (mutation_type == '1' || mutation_type == 'single base substitution'); insertion = (mutation_type == '2' || mutation_type == 'insertion of <=200bp'); deletion = (mutation_type == '3' || mutation_type == 'deletion of <=200bp'); multiple_base_substitution = (mutation_type == '4' || mutation_type == 'multiple base substitution (>=2bp and <=200bp)'); if (!(chromosome_start >= 1 && chromosome_end <= lengths[chromosome] && chromosome_start <= chromosome_end)) { return false } if (mismatch || insertion) {chromosome_start == chromosome_end } else if (deletion || multiple_base_substitution) { chromosome_end - chromosome_start + 1 <= 200 } else { return false }"}}],"controlled":false},{"name":"chromosome_strand","label":"Chromosome strand of mutation. Must always use forward strand (1)","valueType":"INTEGER","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"1","pattern":"^(1)$"}}],"controlled":false},{"name":"reference_genome_allele","label":"Allele in the reference genome. For insertions, use a dash. For all other types of mutations, use forward strand DNA sequence at the reference genome position as specified in chromosome, chromosome_start and chromosome_end","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"GA, -, TCTT","pattern":"(?iu)^([ATGC\\-]+$){1,200}"}}],"controlled":false},{"name":"control_genotype","label":"Genotype of the control sample. Use a dash for a missing allele.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"GA/GA, -/-, TCTT/TCTT","pattern":"(?iu)^([ATGC\\-]+/[ATGC\\-]+)$"}},{"type":"script","config":{"description":"One of the alleles in control_genotype must match the allele specified in mutat/ed_from_allele","script":"ctrlAlleles = control_genotype.split('/'); if (!(ctrlAlleles contains mutated_from_allele)) { return false } else { return true; }"}}],"controlled":true},{"name":"mutated_from_allele","label":"Allele that is believed to be the original allele in the ancestral cell that was mutated in the tumour cell. Use dash for insertions. Mutated allele must be one of the two alleles in the control_genotype","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptingMissingCode":false}},{"type":"regex","config":{"examples":"GA, -, TCTT","pattern":"(?iu)^([ATGC\\-]+$){1,200}"}},{"type":"script","config":{"description":"The allele in this field must be one of the alleles defined in control_genotype. If mutation is an insertion, the allele must be represented as a dash (-). Otherwise, for all other mutations, the allele must be represented as either A,C,T or G. For a mismatch mutation, only one base must be provided. For deletions and multiple base substitutions, the length of the mutated_from_allele must be between 1-200. If mutation is a multiple base substitution, the length of mutated_from_allele and mutated_to_allele cannot both be 1","script":"mismatch = (mutation_type == '1' || mutation_type == 'single base substitution'); insertion = (mutation_type == '2' || mutation_type == 'insertion of <=200bp'); deletion = (mutation_type == '3' || mutation_type == 'deletion of <=200bp'); multiple_base_substitution = (mutation_type == '4' || mutation_type == 'multiple base substitution (>=2bp and <=200bp)'); length_of_mutated_from_allele = mutated_from_allele.length(); length_of_mutated_to_allele = mutated_to_allele.length(); ctrlAlleles = control_genotype.split('/'); if (!(ctrlAlleles contains mutated_from_allele)) {return false } if (insertion && (mutated_from_allele != '-'))  { return false } if ( (mismatch || deletion || multiple_base_substitution) && !(mutated_from_allele ~='[ACTG]+') ) { return false } if (mismatch && length_of_mutated_from_allele != 1) { return false } if ( (deletion || multiple_base_substitution) && (length_of_mutated_from_allele < 1 || length_of_mutated_from_allele > 200) ) { return false } if (multiple_base_substitution) { !(length_of_mutated_from_allele == 1 && length_of_mutated_to_allele == 1) } return true"}}],"controlled":true},{"name":"mutated_to_allele","label":"The new allele identified in the tumour sample that is believed to be the resulting allele of a somatic mutation event during tumourgenesis. Use dash for deletions. Mutant allele must be one allele and must be one of the alleles defined in tumour_genotype","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptingMissingCode":false}},{"type":"regex","config":{"examples":"-, T","pattern":"(?iu)^([ATGC\\-]+$){1,200}"}},{"type":"script","config":{"description":"The allele in this field must be one of the alleles defined in tumour_genotype. If mutation is a deletion, the allele must be represented as a dash (-). Otherwise, for all other mutations, the allele must be represented as either A,C,T or G. For a mismatch mutation, only one base must be provided. For insertions and multiple base substitutions, the length of the mutated_to_allele must be between 1-200. If mutation is a multiple base substitution, the length of mutated_from_allele and mutated_to_allele cannot both be 1","script":"mismatch = (mutation_type == '1' || mutation_type == 'single base substitution'); insertion = (mutation_type == '2' || mutation_type == 'insertion of <=200bp'); deletion = (mutation_type == '3' || mutation_type == 'deletion of <=200bp'); multiple_base_substitution = (mutation_type == '4' || mutation_type == 'multiple base substitution (>=2bp and <=200bp)'); length_of_mutated_from_allele = mutated_from_allele.length(); length_of_mutated_to_allele = mutated_to_allele.length(); tumourAlleles = tumour_genotype.split('/'); ctrlAlleles = control_genotype.split('/'); var allele = null; if (ctrlAlleles contains mutated_to_allele) { for (allele:tumourAlleles) { if (mutated_to_allele != allele) { return false } } } else { if (!(tumourAlleles contains mutated_to_allele)) { return false } } if (deletion && (mutated_to_allele != '-')) { return false } if ( (mismatch || insertion || multiple_base_substitution) && !(mutated_to_allele ~='[ACTG]+') ) { return false } if (mismatch && length_of_mutated_to_allele != 1) { return false } if ( (insertion || multiple_base_substitution) && (length_of_mutated_to_allele < 1 || length_of_mutated_to_allele > 200) ){ return false } if (multiple_base_substitution) { !(length_of_mutated_from_allele == 1 && length_of_mutated_to_allele == 1) } return true"}}],"controlled":false},{"name":"tumour_genotype","label":"Genotype of the tumour sample. Use a dash for each missing base","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"GA/-, -/T, TCTT/-","pattern":"(?iu)^([ATGC\\-]+/[ATGC\\-]+(([/{1}][ATGC\\-]+){0,2})?+)$"}},{"type":"script","config":{"description":"Use a dash for a missing base. Must be a string consisting of two or more aleles joined by a forward slash. No whitespace allowed, and each allele must consist of either A, C, T, G or -. One of the alleles must exist in mutated_to_allele.","script":"tumourAlleles = tumour_genotype.split('/'); (tumourAlleles contains mutated_to_allele)"}}],"controlled":true},{"name":"expressed_allele","label":"For heterozygous SNPs, the dominant allele as revealed by RNA-seq in the tumour sample. When multiple alleles are identified, up to four alleles can be specified, each separated by a comma (no whitespace allowed)","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"AC,GT","pattern":"(?iu)^([ATGC\\-]+(([,{1}][ATGC\\-]+){1,3})?+)$"}}],"controlled":true},{"name":"quality_score","label":"Quality score of the mutation call","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[],"controlled":false},{"name":"probability","label":"Probability of the mutation call","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[],"controlled":false},{"name":"total_read_count","label":"Total number of raw reads that cover the called mutation","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"mutant_allele_read_count","label":"Total number of raw reads that contain the mutant allele","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"script","config":{"description":"The value for mutant allele read count must be less than the value for total read count","script":"if (mutant_allele_read_count == null || total_read_count == null) { return true } else { mutant_allele_read_count <= total_read_count }"}}],"controlled":false},{"name":"verification_status","label":"Indicate if the mutation/variation has been verified using an independent orthogonal genotype platform/technology","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.verification_status.v2"}}],"controlled":false},{"name":"verification_platform","label":"Identifier of orthogonal platform or technology used to confirm that the mutation/variant is true; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"GLOBAL.0.platform.v1"}},{"type":"script","config":{"description":"If mutation is verified, the verification platform must be specified (cannot be -777/-888)","script":"if ( (verification_status == '1' || verification_status == 'tested and verified') && verification_platform == null ) { return false } else { return true }"}}],"controlled":false},{"name":"biological_validation_status","label":"Indicate if the mutation/variation has been observed in a larger cohort/sample size, and is not an artifact or consequence of sample selection for sequencing","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"GLOBAL.0.biological_validation_status.v3"}}],"controlled":false},{"name":"biological_validation_platform","label":"Identifier of assay platform or technology used to validate the mutation/variant","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"GLOBAL.0.platform.v1"}},{"type":"script","config":{"description":"If mutation is biologically validated, the biological validation platform must be specified","script":"if (biological_validation_status == '1' || biological_validation_status == 'tested and valid') { biological_validation_platform != '-777' && biological_validation_platform != '-888' } else { return true }"}}],"controlled":false}],"relations":[{"fields":["analysis_id","analyzed_sample_id"],"bidirectional":true,"other":"ssm_m","otherFields":["analysis_id","analyzed_sample_id"],"optionals":[]}]},{"name":"ssm_m","label":"Simple Somatic Mutations (ssm) - Analysis Metadata File (m)","pattern":"^ssm_m(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":["analysis_id","analyzed_sample_id"],"fields":[{"name":"analysis_id","label":"Unique identifier assigned to a computational analysis run that was performed on a single analyzed non-normal sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"hnc_12, CCG_34_94583, BRCA47832-3239","pattern":"^[\\w+\\-\\_]+$"}}],"controlled":false},{"name":"analyzed_sample_id","label":"A unique identifier representing the particular non-normal sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"ov-45, 90343a, BRCAZ-TG","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"analyzed_sample_id cannot begin with 'SA*'. This prefix is reserved for ICGC IDs","script":"if (analyzed_sample_id ~= '(S|s)(A|a).*') { return false } return true"}}],"controlled":false},{"name":"matched_sample_id","label":"Unique identifier for the matched normal sample used in the analysis; must exist in the sample file. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"hnc_12, CCG_34_94583, BRCA47832-3239","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"The sample identifiers used for matched_sample_id and analyzed_sample_id cannot be identical","script":"if (analyzed_sample_id == matched_sample_id) { return false } return true"}}],"controlled":false},{"name":"assembly_version","label":"Version of human reference genome assembly used in the analysis; specify the version used in alignments, or associated with the particular platform used","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.assembly_version.v2"}}],"controlled":false},{"name":"platform","label":"Identifier of platform or technology used for analysis or verification; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.platform.v1"}}],"controlled":false},{"name":"experimental_protocol","label":"Name of experimental protocol and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"Paired End http://www.illumina.com/technology/paired_end_sequencing_assay.ilmn","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.]|ftp://)[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":false},{"name":"base_calling_algorithm","label":"Name of base calling algorithm and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"CASAVA http://support.illumina.com/sequencing/sequencing_software/casava.ilmn","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.])[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":false},{"name":"alignment_algorithm","label":"Name of alignment algorithm and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"Tophat 2.0.10 http://tophat.cbcb.umd.edu tophat -p 3 -o s1_guided -G BH_WGS.gtf --no-novel-juncs sequence.txt","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.])[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":false},{"name":"variation_calling_algorithm","label":"Name of variation calling algorithm and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"Samtools http://samtools.sourceforge.net","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.])[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":false},{"name":"other_analysis_algorithm","label":"Names of other analysis algorithms.  Separate multiple algorithms by commas.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[],"controlled":false},{"name":"sequencing_strategy","label":"Sequencing technique intended for the analyzed sample library.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.sequencing_strategy.v1"}}],"controlled":false},{"name":"seq_coverage","label":"Sequence coverage if analyzed by sequencing platforms","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[],"controlled":false},{"name":"raw_data_repository","label":"Public repository where raw data is submitted","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.raw_data_repository.v2"}}],"controlled":false},{"name":"raw_data_accession","label":"Accession for referencing the raw data at the public repository","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"script","config":{"description":"Format of raw data accession must match the format required by the raw data repository","script":"EGA = (raw_data_repository == '1' || raw_data_repository == 'EGA'); dbSNP = (raw_data_repository == '2' || raw_data_repository == 'dbSNP'); TCGA = (raw_data_repository == '3' || raw_data_repository == 'TCGA'); CGHub = (raw_data_repository == '4' || raw_data_repository == 'CGHub'); GEO = (raw_data_repository == '5' || raw_data_repository == 'GEO'); TARGET = (raw_data_repository == '6' || raw_data_repository == 'TARGET'); if (EGA) { raw_data_accession ~= '(?iu)EGA[DS][0-9]{11}|((?iu)EGA[S][0-9]{11})?([:])?((?iu)EGA[D][0-9]{11})?([:](?iu)EGA[N][0-9]{11})?(([:](?iu)EGA[X][0-9]{11})+)?(([:](?iu)EGA[R][0-9]{11})+)?(([:](?iu)EGA[F][0-9]{11})+)?' } else if (GEO) { raw_data_accession ~= '(G(SE|DS|SM)[0-9]+)((([,])(G(SE|DS|SM)[0-9]+))+)?' } else if (TCGA) { raw_data_accession ~= 'TCGA-[A-Za-z0-9_-]+'} else if (CGHub) { raw_data_accession ~= '[A-Fa-f0-9-]+' } else if (dbSNP) { raw_data_accession ~= '[A-Za-z0-9_-]+.*' } else if (TARGET) { raw_data_accession ~= 'ftp://caftpd.nci.nih.gov/pub/dcc_target/[A-Za-z0-9/_.-]+'} else { return false }"}}],"controlled":false}],"relations":[{"fields":["analyzed_sample_id"],"bidirectional":false,"other":"sample","otherFields":["analyzed_sample_id"],"optionals":[]},{"fields":["matched_sample_id"],"bidirectional":false,"condition":"['AWS','Collab'] contains raw_data_repository","other":"sample","otherFields":["analyzed_sample_id"],"optionals":[]}]},{"name":"stsm_p","label":"Structural Somatic Mutations (stsm) - Primary Analysis File (p)","pattern":"^stsm_p(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":["analysis_id","analyzed_sample_id","placement","sv_id"],"fields":[{"name":"analysis_id","label":"Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"hnc_12, CCG_34_94583, BRCA47832-3239","pattern":"^[\\w+\\-\\_]+$"}}],"controlled":false},{"name":"analyzed_sample_id","label":"A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"ov-45, 90343a, BRCAZ-TG","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"analyzed_sample_id cannot begin with 'SA*'. This prefix is reserved for ICGC IDs","script":"if (analyzed_sample_id ~= '(S|s)(A|a).*') { return false } return true"}}],"controlled":false},{"name":"sv_id","label":"A unique identifier assigned to a particular structural variant observation (one ID per event).","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"sv12, SA-AV123-98","pattern":"^[\\w+\\-\\_]+$"}}],"controlled":false},{"name":"placement","label":"Ordering of breakpoint pairs within a single structural change event","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":false}}],"controlled":false},{"name":"annotation","label":"Annotation describing sequence mutation/variation based on breakpoint pairs","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}}],"controlled":false},{"name":"interpreted_annotation","label":"HGVS nomenclature for description of sequence mutation/variation. E.g. chr3:g.1234567-2345678inv.","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"variant_type","label":"Type of mutation/variation","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"stsm_p.0.variant_type.v1"}}],"controlled":false},{"name":"chr_from","label":"Name of the donor chromosome containing the mutation/variation","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.chromosome.v3"}}],"controlled":false},{"name":"chr_from_bkpt","label":"Breakpoint position of the mutation/variation on the donor chromosome","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":false}}],"controlled":false},{"name":"chr_from_strand","label":"Donor chromome strand","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.strand.v1"}}],"controlled":false},{"name":"chr_from_range","label":"Number of bases around chr_from_bkpt that may contain the real breakpoint","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"chr_from_flanking_seq","label":"Flanking sequences that are 200bp upstream and 200bp downstream to the chr_from_bkpt position.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[],"controlled":false},{"name":"chr_to","label":"Name of the acceptor chromosome containing the mutation/variation","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.chromosome.v3"}}],"controlled":false},{"name":"chr_to_bkpt","label":"Breakpoint position of the mutation/variation on the acceptor chromosome","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":false}}],"controlled":false},{"name":"chr_to_strand","label":"Acceptor chromome strand","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.strand.v1"}}],"controlled":false},{"name":"chr_to_range","label":"Number of bases around chr_to_bkpt that may contain the real breakpoint","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"chr_to_flanking_seq","label":"Flanking sequences that are 200bp upstream and 200bp downstream to the chr_to_bkpt position.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[],"controlled":false},{"name":"microhomology_sequence","label":"If a microhomology is inserted, provide sequence","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[],"controlled":false},{"name":"non_templated_sequence","label":"If non-templated DNA is inserted, provide sequence","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[],"controlled":false},{"name":"evidence","label":"Evidence supporting a structural mutation/variation","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"codelist","config":{"name":"stsm_p.0.evidence.v1"}}],"controlled":false},{"name":"quality_score","label":"Quality score of the observation","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[],"controlled":false},{"name":"probability","label":"Probability of the observation","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[],"controlled":false},{"name":"zygosity","label":"Zygosity","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"codelist","config":{"name":"stsm_p.0.zygosity.v1"}}],"controlled":false},{"name":"verification_status","label":"Indicate if the mutation/variation has been verified using an independent orthogonal genotype platform/technology","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.verification_status.v2"}}],"controlled":false},{"name":"verification_platform","label":"Identifier of orthogonal platform or technology used to confirm that the mutation/variant is true; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"GLOBAL.0.platform.v1"}},{"type":"script","config":{"description":"If mutation is verified, the verification platform must be specified (cannot be -777/-888)","script":"if ( (verification_status == '1' || verification_status == 'tested and verified') && verification_platform == null ) { return false } else { return true }"}}],"controlled":false},{"name":"biological_validation_status","label":"Indicate if the mutation/variation has been observed in a larger cohort/sample size, and is not an artifact or consequence of sample selection for sequencing","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"GLOBAL.0.biological_validation_status.v3"}}],"controlled":false},{"name":"biological_validation_platform","label":"Identifier of assay platform or technology used to validate the mutation/variant","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"GLOBAL.0.platform.v1"}},{"type":"script","config":{"description":"If mutation is biologically validated, the biological validation platform must be specified","script":"if (biological_validation_status == '1' || biological_validation_status == 'tested and valid') { biological_validation_platform != '-777' && biological_validation_platform != '-888' } else { return true }"}}],"controlled":false}],"relations":[{"fields":["analysis_id","analyzed_sample_id"],"bidirectional":true,"other":"stsm_m","otherFields":["analysis_id","analyzed_sample_id"],"optionals":[]}]},{"name":"stsm_s","label":"Structural Somatic Mutations (stsm) - Secondary Analysis File (s)","pattern":"^stsm_s(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":[],"fields":[{"name":"analysis_id","label":"Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"hnc_12, CCG_34_94583, BRCA47832-3239","pattern":"^[\\w+\\-\\_]+$"}}],"controlled":false},{"name":"analyzed_sample_id","label":"A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"ov-45, 90343a, BRCAZ-TG","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"analyzed_sample_id cannot begin with 'SA*'. This prefix is reserved for ICGC IDs","script":"if (analyzed_sample_id ~= '(S|s)(A|a).*') { return false } return true"}}],"controlled":false},{"name":"sv_id","label":"A unique identifier assigned to a particular structural variant observation (one ID per event).","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"sv12, SA-AV123-98","pattern":"^[\\w+\\-\\_]+$"}}],"controlled":false},{"name":"placement","label":"Ordering of breakpoint pairs within a single structural change event","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":false}}],"controlled":false},{"name":"gene_affected_by_bkpt_from","label":"Transcript(s) affected by the breakpoints. Use Ensembl transcript id. Separate multiple transcripts from the same gene with commas, and separate transcripts from different genes with vertical bars. e.g.: transcriptA1,transcriptA2|transcriptB1|transcriptC1","valueType":"TEXT","summaryType":null,"restrictions":[],"controlled":false},{"name":"gene_affected_by_bkpt_to","label":"Gene(s) affected by the breakpoints. Use Ensembl gene id. Separate multiple genes with vertical bars in the form of geneA|geneB|geneC. If both breakpoints affect genes, then use \"|\" to separate them. If no gene is affected, use -888 (not applicable).","valueType":"TEXT","summaryType":null,"restrictions":[],"controlled":false},{"name":"transcript_affected_by_bkpt_from","label":"Transcript(s) affected by the breakpoints. Use Ensembl transcript id. Separate multiple transcripts from the same gene with commas, and separate transcripts from different genes with vertical bars. e.g.: transcriptA1,transcriptA2|transcriptB1|transcriptC1","valueType":"TEXT","summaryType":null,"restrictions":[],"controlled":false},{"name":"transcript_affected_by_bkpt_to","label":"Transcript(s) affected by the breakpoints. Use Ensembl transcript id. Separate multiple transcripts from the same gene with commas, and separate transcripts from different genes with vertical bars. e.g.: transcriptA1,transcriptA2|transcriptB1|transcriptC1","valueType":"TEXT","summaryType":null,"restrictions":[],"controlled":false},{"name":"bkpt_from_context","label":"Contextual description of the first break location (Exonic, Intronic, Intergenic)","valueType":"TEXT","summaryType":null,"restrictions":[],"controlled":false},{"name":"bkpt_to_context","label":"Contextual description of the second break location (Exonic, Intronic, Intergenic)","valueType":"TEXT","summaryType":null,"restrictions":[],"controlled":false},{"name":"gene_build_version","label":"Gene build version associated with the platform, tools or other methods used in the analysis; Supports the following syntax: 'DB:VERSION'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"Ensembl:69","pattern":"^(\\w+)\\:(\\w+)$"}}],"controlled":false}],"relations":[{"fields":["analysis_id","analyzed_sample_id","sv_id","placement"],"bidirectional":false,"other":"stsm_p","otherFields":["analysis_id","analyzed_sample_id","sv_id","placement"],"optionals":[]}]},{"name":"stsm_m","label":"Structural Somatic Mutations (stsm) - Analysis Metadata File (m)","pattern":"^stsm_m(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":["analysis_id","analyzed_sample_id"],"fields":[{"name":"analysis_id","label":"Unique identifier assigned to a computational analysis run that was performed on a single analyzed non-normal sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"hnc_12, CCG_34_94583, BRCA47832-3239","pattern":"^[\\w+\\-\\_]+$"}}],"controlled":false},{"name":"analyzed_sample_id","label":"A unique identifier representing the particular non-normal sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"ov-45, 90343a, BRCAZ-TG","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"analyzed_sample_id cannot begin with 'SA*'. This prefix is reserved for ICGC IDs","script":"if (analyzed_sample_id ~= '(S|s)(A|a).*') { return false } return true"}}],"controlled":false},{"name":"matched_sample_id","label":"Unique identifier for the matched normal sample used in the analysis; must exist in the sample file","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"mut19, LH12-fb","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"The sample identifiers used for matched_sample_id and analyzed_sample_id cannot be identical","script":"if (analyzed_sample_id == matched_sample_id) { return false } return true"}}],"controlled":false},{"name":"assembly_version","label":"Version of human reference genome assembly used in the analysis; specify the version used in alignments, or associated with the particular platform used","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.assembly_version.v2"}}],"controlled":false},{"name":"platform","label":"Identifier of platform or technology used for analysis or verification; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.platform.v1"}}],"controlled":false},{"name":"experimental_protocol","label":"Name of experimental protocol and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"Paired End http://www.illumina.com/technology/paired_end_sequencing_assay.ilmn","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.]|ftp://)[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":false},{"name":"base_calling_algorithm","label":"Name of base calling algorithm and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"CASAVA http://support.illumina.com/sequencing/sequencing_software/casava.ilmn","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.])[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":false},{"name":"alignment_algorithm","label":"Name of alignment algorithm and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"BWA 0.6.2 http://bio-bwa.sourceforge.net bwa aln -q20 HGref s1.fastq > s1_bwa.sai","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.])[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":false},{"name":"variation_calling_algorithm","label":"Name of variation calling algorithm and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"Samtools http://samtools.sourceforge.net","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.])[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":false},{"name":"other_analysis_algorithm","label":"Names of other analysis algorithms.  Separate multiple algorithms by commas.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[],"controlled":false},{"name":"sequencing_strategy","label":"Sequencing technique intended for the analyzed sample library.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.sequencing_strategy.v1"}}],"controlled":false},{"name":"seq_coverage","label":"Sequence coverage if analyzed by sequencing platforms","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[],"controlled":false},{"name":"raw_data_repository","label":"Public repository where raw data is submitted","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.raw_data_repository.v2"}}],"controlled":false},{"name":"raw_data_accession","label":"Accession for referencing the raw data at the public repository","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"script","config":{"description":"Format of raw data accession must match the format required by the raw data repository","script":"EGA = (raw_data_repository == '1' || raw_data_repository == 'EGA'); dbSNP = (raw_data_repository == '2' || raw_data_repository == 'dbSNP'); TCGA = (raw_data_repository == '3' || raw_data_repository == 'TCGA'); CGHub = (raw_data_repository == '4' || raw_data_repository == 'CGHub'); GEO = (raw_data_repository == '5' || raw_data_repository == 'GEO'); TARGET = (raw_data_repository == '6' || raw_data_repository == 'TARGET'); if (EGA) { raw_data_accession ~= '(?iu)EGA[DS][0-9]{11}|((?iu)EGA[S][0-9]{11})?([:])?((?iu)EGA[D][0-9]{11})?([:](?iu)EGA[N][0-9]{11})?(([:](?iu)EGA[X][0-9]{11})+)?(([:](?iu)EGA[R][0-9]{11})+)?(([:](?iu)EGA[F][0-9]{11})+)?' } else if (GEO) { raw_data_accession ~= '(G(SE|DS|SM)[0-9]+)((([,])(G(SE|DS|SM)[0-9]+))+)?' } else if (TCGA) { raw_data_accession ~= 'TCGA-[A-Za-z0-9_-]+'} else if (CGHub) { raw_data_accession ~= '[A-Fa-f0-9-]+' } else if (dbSNP) { raw_data_accession ~= '[A-Za-z0-9_-]+.*' } else if (TARGET) { raw_data_accession ~= 'ftp://caftpd.nci.nih.gov/pub/dcc_target/[A-Za-z0-9/_.-]+'} else { return false }"}}],"controlled":false}],"relations":[{"fields":["analyzed_sample_id"],"bidirectional":false,"other":"sample","otherFields":["analyzed_sample_id"],"optionals":[]},{"fields":["matched_sample_id"],"bidirectional":false,"other":"sample","otherFields":["analyzed_sample_id"],"optionals":[]}]},{"name":"biomarker","label":"Donor Biomarkers (biomarker)","pattern":"^biomarker(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":["donor_id","specimen_id","biomarker_name"],"fields":[{"name":"donor_id","label":"Unique identifier for the donor; assigned by data provider. It must be coded, and correspond to a donor ID listed in the donor data file.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"90234, BLD_donor_89, AML-90","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"donor_id cannot begin with 'DO*'. This prefix is reserved for ICGC IDs","script":"if (donor_id ~= '(D|d)(O|o).*') { return false } return true"}}],"controlled":false},{"name":"specimen_id","label":"Unique identifier for a collected specimen assigned by data provider.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"LAML_PO_00445,THY_099-tumour","pattern":"^([\\w+\\-\\_]+)$"}},{"type":"script","config":{"description":"specimen_id cannot begin with 'SP*'. This prefix is reserved for ICGC IDs","script":"if (specimen_id ~= '(S|s)(P|p).*') { return false } return true"}}],"controlled":false},{"name":"biomarker_name","label":"Biomarker name","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":false}}],"controlled":false},{"name":"biomarker_threshold","label":"Threshold value for the biomarker for calling a result positive. Please include units.","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":false}}],"controlled":false},{"name":"biomarker_positive","label":"Whether test is positive for named biomarker","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"biomarker.0.biomarker_positive.v1"}}],"controlled":false}],"relations":[{"fields":["donor_id"],"bidirectional":false,"other":"donor","otherFields":["donor_id"],"optionals":[]},{"fields":["donor_id","specimen_id"],"bidirectional":false,"other":"specimen","otherFields":["donor_id","specimen_id"],"optionals":[1]}]},{"name":"donor","label":"Donor Data File (donor)","pattern":"^donor(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":["donor_id"],"fields":[{"name":"donor_id","label":"Unique identifier for the donor; assigned by data provider. It must be coded, and correspond to a donor ID listed in the donor data file.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"90234, BLD_donor_89, AML-90","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"donor_id cannot begin with 'DO*'. This prefix is reserved for ICGC IDs","script":"if (donor_id ~= '(D|d)(O|o).*') { return false } return true"}}],"controlled":false},{"name":"donor_sex","label":"Donor biological sex. 'Other' has been removed from the controlled vocabulary due to identifiability concerns.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"donor.0.donor_sex.v1"}}],"controlled":false},{"name":"donor_region_of_residence","label":"Country, and optionally state or province code, but not city.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":true},{"name":"donor_vital_status","label":"Donor's last known vital status","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"donor.0.donor_vital_status.v1"}}],"controlled":false},{"name":"disease_status_last_followup","label":"Donor's last known disease status.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"donor.0.disease_status_last_followup.v1"}}],"controlled":false},{"name":"donor_relapse_type","label":"Type of relapse or progression (for liquid tumours), if applicable","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"donor.0.donor_relapse_type.v1"}}],"controlled":false},{"name":"donor_age_at_diagnosis","label":"Age at primary diagnosis in years.","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"script","config":{"description":"The donor's age at diagnosis must be expressed in years. If donor is older than 90 years, submit value of 90. The donor's age at diagnosis should be less than or equal to the donor's age at enrollment","script":"if (donor_age_at_diagnosis > 90) { return false } if (donor_age_at_diagnosis > donor_age_at_enrollment) { return false } return true"}}],"controlled":false},{"name":"donor_age_at_enrollment","label":"Age (in years) at which first specimen was collected.","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"script","config":{"description":"The donor's age at enrollment must be expressed in years. If donor is older than 90 years old, submit value of 90. The donor age at enrollment should be greater than or equal to the donor's age at last followup","script":"if (donor_age_at_enrollment > 90) { return false } if (donor_age_at_enrollment > donor_age_at_last_followup) { return false} return true"}}],"controlled":false},{"name":"donor_age_at_last_followup","label":"Age (in years) at last followup","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"donor_relapse_interval","label":"If the donor was clinically disease free following primary therapy, and then relapse or progression (for liquid tumours) occurred afterwards, then donor_relapse_interval is the length of disease free interval, in days.","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"script","config":{"description":"If donor_vital_status is alive and disease_status_last_followup is relapse or progression, the donor_relapse_interval should be less than or equal to the donor interval of last followup. If the donor is deceased and disease_status_last_followup is relapse or progression, the donor_relapse_interval should be less than or equal to the donor_survival_time. Please see <a href='https://docs.icgc.org/donor-clinical-data-guidelines'>Donor clinical data documentation </a> for more details","script":"excludeDonorList = ['AOCS-004','AOCS-084','ICGC_0456','ICGC_0498','ITNET-1301','ITNET-1312','ICGC_0034','ICGC_0054','ICGC_0073','ICGC_0082','ICGC_0113','ICGC_0121','ICGC_0137','ICGC_0161','ICGC_0165','ICGC_0190','ICGC_0196','ICGC_0210','ICGC_0211','ICGC_0213','ICGC_0220','ICGC_0223','ICGC_0228','ICGC_0232','ICGC_0238','ICGC_0239','ICGC_0240','ICGC_0241','ICGC_0242','ICGC_0243','ICGC_0244','ICGC_0245','ICGC_0246','ICGC_0247','ICGC_0248','ICGC_0249','ICGC_0250','ICGC_0251','ICGC_0252','ICGC_0253','ICGC_0254','ICGC_0255','ICGC_0256','ICGC_0258','ICGC_0259','ICGC_0260','ICGC_0262','ICGC_0263','ICGC_0264','ICGC_0265','ICGC_0266','ICGC_0267','ICGC_0268','ICGC_0269','ICGC_0270','ICGC_0271','ICGC_0272','ICGC_0273','ICGC_0274','ICGC_0275','ICGC_0276','ICGC_0277','ICGC_0278','ICGC_0279','ICGC_0280','ICGC_0281','ICGC_0282','ICGC_0283','ICGC_0284','ICGC_0286','ICGC_0288','ICGC_0289','ICGC_0291','ICGC_0292','ICGC_0293','ICGC_0294','ICGC_0303','ICGC_0307','ICGC_0313','ICGC_0315','ICGC_0317','ICGC_0327','ICGC_0328','ICGC_0329','ICGC_0335','ICGC_0336','ICGC_0338','ICGC_0349','ICGC_0350','ICGC_0462','ICGC_0463','ICGC_0464','ICGC_0465','ICGC_0466','ICGC_0467','ICGC_0468','ICGC_0469','ICGC_0470','ICGC_0471','ICGC_0472','ICGC_0473','ICGC_0474','ICGC_0475','ICGC_0476','ICGC_0477','ICGC_0478','ICGC_0479','ICGC_0480','ICGC_0481','ICGC_0482','ICGC_0483','ICGC_0484','ICGC_0485','ICGC_0529','ICGC_0541','ICGC_0004','ICGC_0354','ICGC_0023','ICGC_0083','ICGC_0094','ICGC_0056','ICGC_0059','ICGC_0060','ICGC_0100','ICGC_0101','ICGC_0103','ICGC_0064','ICGC_0111','ICGC_0112','ICGC_0212','ICGC_0117','ICGC_0123','ICGC_0394','ICGC_0067','ICGC_0132','ICGC_0133','ICGC_0152','ICGC_0153','ICGC_0154','ICGC_0164','ICGC_0167','ICGC_0169','ICGC_0170','ICGC_0174','ICGC_0177','ICGC_0179','ICGC_0185','ICGC_0191','ICGC_0515','ICGC_0214','ICGC_0341','ICGC_0229','ICGC_0215','ICGC_0216','ICGC_0230','ICGC_0234','ICGC_0218','ICGC_0395','ICGC_0221','ICGC_0298','ICGC_0236','ICGC_0237','ICGC_0337','ICGC_0487','ICGC_0398','ICGC_0400','ICGC_0322','ICGC_0343','ICGC_0302','ICGC_0310','ICGC_0311','ICGC_0324','ICGC_0312','ICGC_0355','ICGC_0227','ICGC_0357','ICGC_0490','ICGC_0405','ICGC_0353','ICGC_0423','ICGC_0409','ICGC_0360','ICGC_0411','ICGC_0420','ICGC_0368','ICGC_0369','ICGC_0370','ICGC_0377','ICGC_0386','ICGC_0535','ICGC_0507','ICGC_0521','ICGC_0543','ICGC_0546','ICGC_0547','PCSI_0112','PCSI_0114','PCSI_0139','PCSI_0018','PCSI_0076','PCSI_0079','PCSI_0125','PCSI_0179','PCSI_0375','PCSI_0404','PCSI_0511','PCSI_0138','PCSI_0039','PCSI_0123','PCSI_0141','PCSI_0143','A10-0015_CRUK_PC_0015','A12-0020_CRUK_PC_0020','A17-0095_CRUK_PC_0095','A21-0096_CRUK_PC_0096','A22-0016_CRUK_PC_0016','A24-0021_CRUK_PC_0021','A29-0017_CRUK_PC_0017','A31-0018_CRUK_PC_0018','A32-0019_CRUK_PC_0019','A34-0022_CRUK_PC_0022','Kor_27','Kor_28']; excludeProjectList=['BLCA-US','BRCA-US','CESC-US','COAD-US','DLBC-US','GBM-US','HNSC-US','KICH-US','KIRC-US','KIRP-US','LGG-US','LIHC-US','LUAD-US','LUSC-US','OV-US','PAAD-US','PRAD-US','READ-US','SARC-US','SKCM-US','STAD-US','THCA-US','UCEC-US']; alive = (donor_vital_status == '1' || donor_vital_status == 'alive'); deceased = (donor_vital_status == '2' || donor_vital_status == 'deceased'); progression = (disease_status_last_followup == '3' || disease_status_last_followup == 'progression'); relapse = (disease_status_last_followup == '4' || disease_status_last_followup == 'relapse'); if (!(excludeDonorList contains donor_id) && !(excludeProjectList contains project)) { if (progression || relapse ) { if (donor_relapse_interval == null || donor_interval_of_last_followup == null) { return false } if (alive && !(donor_relapse_interval <= donor_interval_of_last_followup)) { return false } if (deceased && !(donor_relapse_interval <= donor_survival_time)) { return false } } } return true"}}],"controlled":false},{"name":"donor_diagnosis_icd10","label":"ICD-10 diagnostic code","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"donor_tumour_staging_system_at_diagnosis","label":"Clinical staging system used at time of diagnosis, if determined. Note that this is supplementary to specimen's pathological staging.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"donor_tumour_stage_at_diagnosis","label":"This is the clinical tumour stage classification made at the time of primary diagnosis, typically before any treatment. Please indicate stage at diagnosis using indicated staging system. Note that this is supplementary to specimen's pathological staging.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"donor_tumour_stage_at_diagnosis_supplemental","label":"Optional additional staging provided as a comma-delimited list of 'staging system:stage'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"donor_survival_time","label":"How long has the donor survived since primary diagnosis, in days. If source data was collected in months, use a multiplier value of '30.44' to convert values to days when preparing your submission.","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"script","config":{"description":"Donor survival time must be submitted if donor_vital_status is deceased. If donor is alive, donor_survival_time should be equal to the donor_interval_of_last_followup. Please see <a href='https://docs.icgc.org/donor-clinical-data-guidelines'>Donor clinical data documentation </a> for more details","script":"excludeDonorList=['ICGC_0327','ICGC_0328','ICGC_0329','ICGC_0165','PCSI_0060','PCSI_0090','PCSI_0100','PCSI_0112','PCSI_0114','PCSI_0139','CGP_donor_1232859','CGP_donor_1337220','CGP_donor_1337231','CGP_donor_1347751','CGP_donor_1347756','CGP_donor_1353429','CGP_donor_1374616','CGP_donor_1167078','CGP_donor_1167080','CGP_donor_1187031','CGP_donor_1230778','CGP_donor_1230785','CGP_donor_1310131']; alive = (donor_vital_status == '1' || donor_vital_status == 'alive'); deceased = (donor_vital_status == '2' || donor_vital_status == 'deceased'); if (!(excludeDonorList contains donor_id)) { if (deceased) { if (donor_survival_time == null) { return false } } if (alive) { if (donor_survival_time != null && donor_interval_of_last_followup != null) { if (!(donor_survival_time == donor_interval_of_last_followup)) { return false } } } return true } return true"}}],"controlled":false},{"name":"donor_interval_of_last_followup","label":"Interval from the primary diagnosis date to the last followup date, in days. ICGC requests that patients be followed up every 6 months while alive. If source data was collected in months, use a multiplier value of '30.44' to convert values to days when preparing your submission.","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"script","config":{"description":"If donor's disease_status_last_followup is progression or relapse, donor_interval_of_last_followup is required. Please see <a href='https://docs.icgc.org/donor-clinical-data-guidelines'>Donor clinical data documentation </a> for more details","script":"excludeDonorList=['ICGC_0034','ICGC_0054','ICGC_0073','ICGC_0082','ICGC_0113','ICGC_0121','ICGC_0137','ICGC_0161','ICGC_0165','ICGC_0190','ICGC_0196','ICGC_0210','ICGC_0211','ICGC_0213','ICGC_0220','ICGC_0223','ICGC_0228','ICGC_0232','ICGC_0238','ICGC_0239','ICGC_0240','ICGC_0241','ICGC_0242','ICGC_0243','ICGC_0244','ICGC_0245','ICGC_0246','ICGC_0247','ICGC_0248','ICGC_0249','ICGC_0250','ICGC_0251','ICGC_0252','ICGC_0253','ICGC_0254','ICGC_0255','ICGC_0256','ICGC_0258','ICGC_0259','ICGC_0260','ICGC_0262','ICGC_0263','ICGC_0264','ICGC_0265','ICGC_0266','ICGC_0267','ICGC_0268','ICGC_0269','ICGC_0270','ICGC_0271','ICGC_0272','ICGC_0273','ICGC_0274','ICGC_0275','ICGC_0276','ICGC_0277','ICGC_0278','ICGC_0279','ICGC_0280','ICGC_0281','ICGC_0282','ICGC_0283','ICGC_0284','ICGC_0286','ICGC_0288','ICGC_0289','ICGC_0291','ICGC_0292','ICGC_0293','ICGC_0294','ICGC_0303','ICGC_0307','ICGC_0313','ICGC_0315','ICGC_0317','ICGC_0327','ICGC_0328','ICGC_0329','ICGC_0335','ICGC_0336','ICGC_0338','ICGC_0349','ICGC_0350','ICGC_0462','ICGC_0463','ICGC_0464','ICGC_0465','ICGC_0466','ICGC_0467','ICGC_0468','ICGC_0469','ICGC_0470','ICGC_0471','ICGC_0472','ICGC_0473','ICGC_0474','ICGC_0475','ICGC_0476','ICGC_0477','ICGC_0478','ICGC_0479','ICGC_0480','ICGC_0481','ICGC_0482','ICGC_0483','ICGC_0484','ICGC_0485','ICGC_0529','ICGC_0541','PCSI_0138','PCSI_0112','PCSI_0114','Kor_27','Kor_28']; progression = (disease_status_last_followup == '3' || disease_status_last_followup == 'progression'); relapse = (disease_status_last_followup == '4' || disease_status_last_followup == 'relapse'); if (!(excludeDonorList contains donor_id)) { if ( (progression || relapse) && (donor_interval_of_last_followup == null) ) { return false } } return true"}}],"controlled":false},{"name":"donor_notes","label":"Free text notes concerning donor","valueType":"TEXT","summaryType":null,"restrictions":[],"controlled":true},{"name":"prior_malignancy","label":"Prior malignancy affecting patient.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"donor.0.prior_malignancy.v1"}}],"controlled":false},{"name":"cancer_type_prior_malignancy","label":"ICD-10 diagnostic code for type of cancer in a prior malignancy.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"cancer_history_first_degree_relative","label":"Does patient have a first degree relative that has a history of cancer? If yes, please provide clincial informration about relative's cancer history in Donor Family file","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"family.0.cancer_history_first_degree_relative.v1"}}],"controlled":false},{"name":"donor_primary_treatment_interval","label":"Interval between primary diagnosis and primary treatment, in days","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"script","config":{"description":"The donor's primary treatment interval must be less than or equal to the donor's survival time. If donor's disease_status_last_followup is progression or relapse and the donor is alive, the combination of the donor's primary treatment interval and relapse interval should be less than or equal to the donor's interval of last followup. However, if the donor is deceased and had progressed or relapsed, the combination of the donor's primary treatment interval and relapse interval should be less than or equal to the donor's survival time. Please see <a href='https://docs.icgc.org/donor-clinical-data-guidelines'>Donor clinical data documentation </a> for more details","script":"excludeDonorList=[]; alive = (donor_vital_status == '1' || donor_vital_status == 'alive'); deceased = (donor_vital_status == '2' || donor_vital_status == 'deceased'); progression = (disease_status_last_followup == '3' || disease_status_last_followup == 'progression'); relapse = (disease_status_last_followup == '4' || disease_status_last_followup == 'relapse'); if (!(excludeDonorList contains donor_id)) { if (donor_primary_treatment_interval != null) { if (donor_survival_time != null && !(donor_primary_treatment_interval <= donor_survival_time)) { return false } if ( (progression || relapse) && donor_relapse_interval != null ) { if (alive && !(donor_primary_treatment_interval + donor_relapse_interval <= donor_interval_of_last_followup)) { return false } if (deceased && !(donor_primary_treatment_interval + donor_relapse_interval <= donor_survival_time)) { return false } } } } return true"}}],"controlled":false}],"relations":[]},{"name":"exposure","label":"Donor Exposure (exposure)","pattern":"^exposure(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":["donor_id"],"fields":[{"name":"donor_id","label":"Unique identifier for the donor; assigned by data provider. It must be coded, and correspond to a donor ID listed in the donor data file.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"90234, BLD_donor_89, AML-90","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"donor_id cannot begin with 'DO*'. This prefix is reserved for ICGC IDs","script":"if (donor_id ~= '(D|d)(O|o).*') { return false } return true"}}],"controlled":false},{"name":"exposure_type","label":"Type of exposure. This field can be used if donor was exposed to something other than tobacco or alcohol.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"exposure_intensity","label":"Extent of the exposure. Use this field to specify intensity of exposure submitted in 'exposure_type' field","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"exposure_notes","label":"Free text notes.","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":true},{"name":"tobacco_smoking_history_indicator","label":"Donor's smoking history","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"exposure.0.tobacco_smoking_history_indicator.v1"}}],"controlled":false},{"name":"tobacco_smoking_intensity","label":"Smoking intensity in Pack Years: Number of pack years defined as the number of cigarettes smoked per day times (x) the number of years smoked divided (/) by 20. If patient has no tobacco smoking history (ie. tobacco_smoking_history_indicator is either '1' (non-smoker) or '6' (not documented), enter '-888' (not applicable) in this field.","valueType":"INTEGER","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"alcohol_history","label":"A response to a question that asks whether the patient has consumed at least 12 drinks of any alcoholic beverage in their lifetime.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"exposure.0.alcohol_history.v1"}}],"controlled":false},{"name":"alcohol_history_intensity","label":"Alcohol exposure intensity. If patient does not have alcohol history (ie. alcohol_history field is either '2'(no) or '3'(do not know), enter '-888' (not applicable) in this field.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"alcohol_history_intensity"}},{"type":"script","config":{"description":"This field is required if alcohol_history was specified as '1' (yes). If patient has no alcohol history (non-drinker), indicate value '1' (none) for this field. If alcohol history has not been documented, indicate '6' for this field.","script":"alcohol_history_intensities = ['2', 'Social Drinker (> once a month, < once a week)', '3', 'Weekly Drinker (>=1x a week)', '4', 'Daily Drinker', '5', 'Occassional Drinker (< once a month)', '6', 'Not Documented']; if (alcohol_history == '1' || alcohol_history == 'yes') { alcohol_history_intensities contains alcohol_history_intensity } else if (alcohol_history == '2' || alcohol_history == 'no') { alcohol_history_intensity == '1' || alcohol_history_intensity == 'None'} else if (alcohol_history == '3' || alcohol_history == 'Don\\'t know/Not sure') { alcohol_history_intensity == '6' || alcohol_history_intensity == 'Not Documented' } else { return false }"}}],"controlled":false}],"relations":[{"fields":["donor_id"],"bidirectional":false,"other":"donor","otherFields":["donor_id"],"optionals":[]}]},{"name":"family","label":"Donor Family (family)","pattern":"^family(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":["donor_id","donor_has_relative_with_cancer_history","relationship_type","relationship_type_other","relationship_sex","relationship_age","relationship_disease_icd10","relationship_disease"],"fields":[{"name":"donor_id","label":"Unique identifier for the donor; assigned by data provider. It must be coded, and correspond to a donor ID listed in the donor data file.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"90234, BLD_donor_89, AML-90","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"donor_id cannot begin with 'DO*'. This prefix is reserved for ICGC IDs","script":"if (donor_id ~= '(D|d)(O|o).*') { return false } return true"}}],"controlled":false},{"name":"donor_has_relative_with_cancer_history","label":"Does patient have any relatives with a history of cancer?","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"family.0.donor_has_relative_with_cancer_history.v1"}}],"controlled":false},{"name":"relationship_type","label":"Relationship to the donor","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"family.0.relationship_type.v1"}},{"type":"script","config":{"description":"If there is a history of cancer in a relative, this field must be specified.","script":"if (donor_has_relative_with_cancer_history == '1' || donor_has_relative_with_cancer_history == 'yes') { relationship_type != null } else { return true; }"}}],"controlled":false},{"name":"relationship_type_other","label":"If 'other' answered in relationship_type field, specify the relationship type here","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"script","config":{"description":"If 'other' answered in relationship_type field, specifiy the relationship type here","script":"if (relationship_type == '6' || relationship_type == 'other') { relationship_type_other !=  null } else { return true; }"}}],"controlled":false},{"name":"relationship_sex","label":"Biological sex of related individual","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"family.0.relationship_sex.v1"}},{"type":"script","config":{"description":"Indicate sex of family member specified in the the 'relationship_type' field. If no family history of cancer, then -888 (not applicable) can be used in this field.","script":"relationship_types = ['1', 'sibling', '2', 'parent', '3', 'grandparent', '4', 'uncle/aunt', '5', 'cousin', '6', 'other']; if (relationship_types contains relationship_type) { relationship_sex != null } else { return true }"}}],"controlled":false},{"name":"relationship_age","label":"Age of relative at primary diagnosis (in years)","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"relationship_disease_icd10","label":"ICD-10 code of disease affecting family member specified in the 'relationship_type' field","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"relationship_disease","label":"Disease name","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false}],"relations":[{"fields":["donor_id"],"bidirectional":false,"other":"donor","otherFields":["donor_id"],"optionals":[]}]},{"name":"jcn_p","label":"Splice Variation (jcn) - Primary Analysis File (p)","pattern":"^jcn_p(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":[],"fields":[{"name":"analysis_id","label":"Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"hnc_12, CCG_34_94583, BRCA47832-3239","pattern":"^[\\w+\\-\\_]+$"}}],"controlled":false},{"name":"analyzed_sample_id","label":"A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"ov-45, 90343a, BRCAZ-TG","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"analyzed_sample_id cannot begin with 'SA*'. This prefix is reserved for ICGC IDs","script":"if (analyzed_sample_id ~= '(S|s)(A|a).*') { return false } return true"}}],"controlled":false},{"name":"junction_id","label":"For known exons, use exonID1_exonID2 where exonID1 and exonID2 are Ensembl IDs of the 5' and 3' exons, respectively.  For novel or putative exons, use assemblyBuild_exon1chr_exon1end_exon2chr_exon2start where assemblyBuild is hg19; exon1chr and exone2chr are the chromosomes of the 5' and 3' exons, respectively; exon1end is the end position of the 5'exon; exon2start is the start position of the 3'exon.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}}],"controlled":false},{"name":"gene_stable_id","label":"For providing Ensembl gene or transcript annotation use the DB Xref syntax: 'Ensembl:ENSGxxx'","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"gene_chromosome","label":"Name of the chromosome containing the above gene.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.chromosome.v3"}}],"controlled":false},{"name":"gene_strand","label":"Strand of the chromosome","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.strand.v1"}}],"controlled":false},{"name":"gene_start","label":"Start position of the entire gene on the chromosome as annotated in Ensembl","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"405343492","pattern":"^\\d+$"}},{"type":"script","config":{"description":"Chromosome start position must be equal or greater than 1","script":"lengths = ['1':249250621, '2':243199373, '3':198022430, '4':191154276, '5':180915260, '6':171115067, '7':159138663, '8':146364022, '9':141213431, '10':135534747, '11':135006516, '12':133851895, '13':115169878, '14':107349540, '15':102531392, '16':90354753, '17':81195210, '18':78077248, '19':59128983, '20':63025520, '21':48129895, '22':51304566, 'X':155270560, 'Y':59373566, 'MT':16569]; if (!(gene_start >= 1 && gene_end <= lengths[gene_chromosome] && gene_start <= gene_end)) { return false } return true"}}],"controlled":false},{"name":"gene_end","label":"End position of the entire gene on the chromosome as annotated in Ensembl","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"405343499","pattern":"^\\d+$"}},{"type":"script","config":{"description":"Chromosome end position must be less than or equal to the length of the chromosome","script":"lengths = ['1':249250621, '2':243199373, '3':198022430, '4':191154276, '5':180915260, '6':171115067, '7':159138663, '8':146364022, '9':141213431, '10':135534747, '11':135006516, '12':133851895, '13':115169878, '14':107349540, '15':102531392, '16':90354753, '17':81195210, '18':78077248, '19':59128983, '20':63025520, '21':48129895, '22':51304566, 'X':155270560, 'Y':59373566, 'MT':16569]; if (!(gene_start >= 1 && gene_end <= lengths[gene_chromosome] && gene_start <= gene_end)) { return false } return true"}}],"controlled":false},{"name":"second_gene_stable_id","label":"In the case of a fusion gene, provide the Stable ID of the gene containing the 3' exon at the junction.  For annotated genes, use Ensembl gene ID.  For putative and novel genes, use assemblyBuild_chr_start_end where assemblyBuild is hg19.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"exon1_chromosome","label":"Name of the chromosome containing the 5' exon (#)","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.chromosome.v3"}}],"controlled":false},{"name":"exon1_number_bases","label":"Number of bases from 5' exon","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"exon1_end","label":"End position of the 5' exon on the chromosome","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":false}}],"controlled":false},{"name":"exon1_strand","label":"Chromsome strand of the 5' exon","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"codelist","config":{"name":"GLOBAL.0.strand.v1"}}],"controlled":false},{"name":"exon2_chromosome","label":"Name of the chromosome containing the 3' exon (#)","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.chromosome.v3"}}],"controlled":false},{"name":"exon2_number_bases","label":"Number of bases from 3' exon","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"exon2_start","label":"Start position of the 3' exon on the chromosome","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"405343492","pattern":"^\\d+$"}}],"controlled":false},{"name":"exon2_strand","label":"Chromosome strand of the 3' exon","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"codelist","config":{"name":"GLOBAL.0.strand.v1"}}],"controlled":false},{"name":"is_fusion_gene","label":"Indicate if the function is the result of a fusion gene","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"codelist","config":{"name":"GLOBAL.0.yes_no.v1"}}],"controlled":false},{"name":"is_novel_splice_form","label":"Indicate if the splice form is novel","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"codelist","config":{"name":"GLOBAL.0.yes_no.v1"}}],"controlled":false},{"name":"junction_seq","label":"Provide junction sequence if either is_fusion_gene or is_novel_splice_form is true","valueType":"TEXT","summaryType":null,"restrictions":[],"controlled":false},{"name":"junction_type","label":"Type of junction","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"codelist","config":{"name":"jcn_p.0.junction_type.v1"}}],"controlled":false},{"name":"junction_read_count","label":"Count of sequencing reads that span across exons","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"quality_score","label":"Quality score of the observation","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[],"controlled":false},{"name":"probability","label":"Probability of the observation","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[],"controlled":false},{"name":"verification_status","label":"Indicate if the mutation/variation has been verified using an independent orthogonal genotype platform/technology","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.verification_status.v2"}}],"controlled":false},{"name":"verification_platform","label":"Identifier of orthogonal platform or technology used to confirm that the mutation/variant is true; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"GLOBAL.0.platform.v1"}},{"type":"script","config":{"description":"If mutation is verified, the verification platform must be specified (cannot be -777/-888)","script":"if ( (verification_status == '1' || verification_status == 'tested and verified') && verification_platform == null ) { return false } else { return true }"}}],"controlled":false},{"name":"biological_validation_status","label":"Indicate if the mutation/variation has been observed in a larger cohort/sample size, and is not an artifact or consequence of sample selection for sequencing","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"GLOBAL.0.biological_validation_status.v3"}}],"controlled":false},{"name":"biological_validation_platform","label":"Identifier of assay platform or technology used to validate the mutation/variant","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"GLOBAL.0.platform.v1"}},{"type":"script","config":{"description":"If mutation is biologically validated, the biological validation platform must be specified","script":"if (biological_validation_status == '1' || biological_validation_status == 'tested and valid') { biological_validation_platform != '-777' && biological_validation_platform != '-888' } else { return true }"}}],"controlled":false}],"relations":[{"fields":["analysis_id","analyzed_sample_id"],"bidirectional":true,"other":"jcn_m","otherFields":["analysis_id","analyzed_sample_id"],"optionals":[]}]},{"name":"jcn_m","label":"Splice Variation (jcn) - Analysis Metadata File (m)","pattern":"^jcn_m(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":["analysis_id","analyzed_sample_id"],"fields":[{"name":"analysis_id","label":"Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs. Cannot contain whitespace, semi-colons or special characters. Can contain alphanumeric characters, dashes or underscores.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"hnc_12, CCG_34_94583, BRCA47832-3239","pattern":"^[\\w+\\-\\_]+$"}}],"controlled":false},{"name":"analyzed_sample_id","label":"A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"ov-45, 90343a, BRCAZ-TG","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"analyzed_sample_id cannot begin with 'SA*'. This prefix is reserved for ICGC IDs","script":"if (analyzed_sample_id ~= '(S|s)(A|a).*') { return false } return true"}}],"controlled":false},{"name":"assembly_version","label":"Version of human reference genome assembly used in the analysis; specify the version used in alignments, or associated with the particular platform used","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.assembly_version.v2"}}],"controlled":false},{"name":"gene_build_version","label":"Gene build version associated with the platform, tools or other methods used in the analysis; Supports the following syntax: 'DB:VERSION'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"Ensembl:69","pattern":"^(\\w+)\\:(\\w+)$"}}],"controlled":false},{"name":"platform","label":"Identifier of platform or technology used for analysis or verification; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.platform.v1"}}],"controlled":false},{"name":"experimental_protocol","label":"Name of experimental protocol and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"Paired End http://www.illumina.com/technology/paired_end_sequencing_assay.ilmn","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.]|ftp://)[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":false},{"name":"base_calling_algorithm","label":"Name of base calling algorithm and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"CASAVA http://support.illumina.com/sequencing/sequencing_software/casava.ilmn","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.])[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":false},{"name":"alignment_algorithm","label":"Name of alignment algorithm and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"BWA 0.6.2 http://bio-bwa.sourceforge.net bwa aln -q20 HGref s1.fastq > s1_bwa.sai","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.])[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":false},{"name":"normalization_algorithm","label":"Name of normalization algorithm and option to include URL to written protocol and/or algorithm parameters. Syntax should be: '<Name of Protocol><single whitespace><URL to protocol (optional)><single whitespace><algorithm parameters (optional)>'","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"RPKM http://www.ncbi.nlm.nih.gov/pubmed/18516045","pattern":"(^[\\w\\s_\\-\\.]+)((\\s)(http(s)?://|www[.])[-A-Za-z0-9+&@#/%?=~_()|!:,.;]*)?((\\s)[-A-Za-z0-9_\\s|><.]+)?"}}],"controlled":false},{"name":"other_analysis_algorithm","label":"Names of other analysis algorithms.  Separate multiple algorithms by commas.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[],"controlled":false},{"name":"sequencing_strategy","label":"Sequencing technique intended for the analyzed sample library.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.sequencing_strategy.v1"}}],"controlled":false},{"name":"seq_coverage","label":"Sequence coverage if analyzed by sequencing platforms","valueType":"DECIMAL","summaryType":"AVERAGE","restrictions":[],"controlled":false},{"name":"raw_data_repository","label":"Public repository where raw data is submitted","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"GLOBAL.0.raw_data_repository.v2"}}],"controlled":false},{"name":"raw_data_accession","label":"Accession for referencing the raw data at the public repository","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"script","config":{"description":"Format of raw data accession must match the format required by the raw data repository","script":"EGA = (raw_data_repository == '1' || raw_data_repository == 'EGA'); dbSNP = (raw_data_repository == '2' || raw_data_repository == 'dbSNP'); TCGA = (raw_data_repository == '3' || raw_data_repository == 'TCGA'); CGHub = (raw_data_repository == '4' || raw_data_repository == 'CGHub'); GEO = (raw_data_repository == '5' || raw_data_repository == 'GEO'); TARGET = (raw_data_repository == '6' || raw_data_repository == 'TARGET'); if (EGA) { raw_data_accession ~= '(?iu)EGA[DS][0-9]{11}|((?iu)EGA[S][0-9]{11})?([:])?((?iu)EGA[D][0-9]{11})?([:](?iu)EGA[N][0-9]{11})?(([:](?iu)EGA[X][0-9]{11})+)?(([:](?iu)EGA[R][0-9]{11})+)?(([:](?iu)EGA[F][0-9]{11})+)?' } else if (GEO) { raw_data_accession ~= '(G(SE|DS|SM)[0-9]+)((([,])(G(SE|DS|SM)[0-9]+))+)?' } else if (TCGA) { raw_data_accession ~= 'TCGA-[A-Za-z0-9_-]+'} else if (CGHub) { raw_data_accession ~= '[A-Fa-f0-9-]+' } else if (dbSNP) { raw_data_accession ~= '[A-Za-z0-9_-]+.*' } else if (TARGET) { raw_data_accession ~= 'ftp://caftpd.nci.nih.gov/pub/dcc_target/[A-Za-z0-9/_.-]+'} else { return false }"}}],"controlled":false}],"relations":[{"fields":["analyzed_sample_id"],"bidirectional":false,"other":"sample","otherFields":["analyzed_sample_id"],"optionals":[]}]},{"name":"sample","label":"Analyzed Sample Data File (sample)","pattern":"^sample(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":["analyzed_sample_id"],"fields":[{"name":"analyzed_sample_id","label":"A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"hnc_12, CCG_34_94583, BRCA47832-3239","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"analyzed_sample_id cannot begin with 'SA*'. This prefix is reserved for ICGC IDs","script":"if (analyzed_sample_id ~= '(S|s)(A|a).*') { return false } return true"}}],"controlled":false},{"name":"specimen_id","label":"Unique identifier for a collected specimen assigned by data provider.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"LAML_PO_00445,THY_099-tumour","pattern":"^([\\w+\\-\\_]+)$"}},{"type":"script","config":{"description":"specimen_id cannot begin with 'SP*'. This prefix is reserved for ICGC IDs","script":"if (specimen_id ~= '(S|s)(P|p).*') { return false } return true"}}],"controlled":false},{"name":"analyzed_sample_interval","label":"Interval from specimen acquisition to sample use in an analytic procedure (e.g. DNA extraction), in days","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[],"controlled":false},{"name":"percentage_cellularity","label":"The cellularity (ratio of tumour nuclei to total number of nuclei in a given sample) of the analyzed sample assessed by methods other than the pathologist's report (ie. cellularity derived from sequencing data). Can populate information in either this field or level_of_cellularity","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"level_of_cellularity","label":"The cellularity (proportion of tumour nuclei to total number of nuclei in a given sample) of the analyzed sample assessed by methods other than the pathologist's report (ie. cellularity derived from sequencing data). If exact percentage cellularity cannot be determined, submitter has option to use this field to specify a level that defines a range of percentages","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"specimen.0.cellularity.v2"}}],"controlled":false},{"name":"analyzed_sample_notes","label":"Freetext notes about sample allowed","valueType":"TEXT","summaryType":null,"restrictions":[],"controlled":true},{"name":"study","label":"Indicate if sample is part of a study","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"codelist","config":{"name":"sample.0.study.v3"}}],"controlled":false}],"relations":[{"fields":["specimen_id"],"bidirectional":true,"other":"specimen","otherFields":["specimen_id"],"optionals":[]}]},{"name":"specimen","label":"Specimen Data File (specimen)","pattern":"^specimen(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":["specimen_id"],"fields":[{"name":"donor_id","label":"Unique identifier for the donor; assigned by data provider. It must be coded, and correspond to a donor ID listed in the donor data file.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"90234, BLD_donor_89, AML-90","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"donor_id cannot begin with 'DO*'. This prefix is reserved for ICGC IDs","script":"if (donor_id ~= '(D|d)(O|o).*') { return false } return true"}}],"controlled":false},{"name":"specimen_id","label":"Unique identifier for a collected specimen assigned by data provider.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"LAML_PO_00445,THY_099-tumour","pattern":"^([\\w+\\-\\_]+)$"}},{"type":"script","config":{"description":"specimen_id cannot begin with 'SP*'. This prefix is reserved for ICGC IDs","script":"if (specimen_id ~= '(S|s)(P|p).*') { return false } return true"}}],"controlled":false},{"name":"specimen_type","label":"Controlled vocabulary description of specimen type.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"specimen.0.specimen_type.v3"}}],"controlled":false},{"name":"specimen_type_other","label":"Free text description of site of specimen if 108 ('Normal - other') or 113 ('Primary tumour - other') or 117 ('Recurrent tumour - other') was specified in specimen_type field.","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"script","config":{"description":"If specimen_type is specified as either Normal - other, Primary tumour - other or Recurrent tumour - other, specimen_type_other needs to be filled in","script":"other_specimen_types = ['108', 'Normal - other', '113', 'Primary tumour - other', '117', 'Recurrent tumour - other', '127', 'Metastatic tumour - other']; if (other_specimen_types contains specimen_type) { (specimen_type_other != null) } else { return true; }"}}],"controlled":false},{"name":"specimen_interval","label":"Interval between primary diagnosis and specimen acquisition, in days","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"specimen_donor_treatment_type","label":"Type of treatment the donor received prior to specimen acquisition.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"specimen.0.specimen_donor_treatment_type.v1"}}],"controlled":false},{"name":"specimen_donor_treatment_type_other","label":"If 'other' therapy indicated in previous column, describe it here. eg: molecular","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"script","config":{"description":"If 'other therapy' specified in specimen_donor_treatment_type', specify the other therapy here","script":"if (specimen_donor_treatment_type == '8' || specimen_donor_treatment_type == 'other therapy') { specimen_donor_treatment_type_other != null } else { return true; }"}}],"controlled":false},{"name":"specimen_processing","label":"Description of technique used to process specimen","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"specimen.0.specimen_processing.v1"}}],"controlled":false},{"name":"specimen_processing_other","label":"If 'other' specified for specimen_processing, may indicate technique here.","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"specimen_storage","label":"Description of how specimen was stored. For specimens that were extracted freshly or immediately cultured, answer (1) 'NA'.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"specimen.0.specimen_storage.v1"}}],"controlled":false},{"name":"specimen_storage_other","label":"If 'other' specified for specimen_storage, may indicate technique here.","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"tumour_confirmed","label":"Whether tumour was confirmed in the specimen as malignant by histological examination.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"GLOBAL.0.yes_no.v1"}}],"controlled":false},{"name":"specimen_biobank","label":"If the specimen was obtained from a biobank, provide the biobank name here","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"specimen_biobank_id","label":"If the specimen was obtained from a biobank, provide the biobank accession number here.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"specimen_available","label":"Whether additional tissue is available for followup studies.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"GLOBAL.0.yes_no.v1"}}],"controlled":false},{"name":"tumour_histological_type","label":"'WHO International Histological Classification of Tumours' code. See http://w2.iarc.fr/en/publications/pdfs-online/pat-gen/bb2/BB2.pdf for details.","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"tumour_grading_system","label":"Name of tumour grading system","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"tumour_grade","label":"Tumour grade using indicated grading system","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"tumour_grade_supplemental","label":"Optional additional grading provided as a comma-delimited list of 'grading system:grade'","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"tumour_stage_system","label":"Name of tumour staging system used ","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"tumour_stage","label":"This is the pathological tumour stage classification made after the tumour has been surgically removed, and is based on the pathological results of the tumour and other tissues removed during surgery or biopsy. This information is not expected to be the same as 'donor_tumour_stage_at_diagnosis' since the pathological tumour staging information is the combination of the clinical staging information and additional information obtained during surgery. For this field, please indicate pathological tumour stage value using indicated staging system","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"tumour_stage_supplemental","label":"Optional additional staging provided as a comma-delimited list of 'staging system:stage'","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"digital_image_of_stained_section","label":"Linkout(s) to digital image of a stained section, demonstrating a representative section of tumour","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"percentage_cellularity","label":"The ratio of tumour nuclei to total number of nuclei in a given specimen expressed as a percentage. Can populate information in either this field or level_of_cellularity","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"level_of_cellularity","label":"The proportion of tumour nuclei to total number of nuclei in a given specimen. If exact percentage cellularity cannot be determined submitter has option to use this field to specify a level that defines a range of percentage.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"specimen.0.cellularity.v2"}}],"controlled":false},{"name":"specimen_notes","label":"Free text notes allowed","valueType":"TEXT","summaryType":null,"restrictions":[],"controlled":true}],"relations":[{"fields":["donor_id"],"bidirectional":true,"other":"donor","otherFields":["donor_id"],"optionals":[]}]},{"name":"surgery","label":"Donor Surgery (surgery)","pattern":"^surgery(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":["donor_id","specimen_id"],"fields":[{"name":"donor_id","label":"Unique identifier for the donor; assigned by data provider. It must be coded, and correspond to a donor ID listed in the donor data file.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"90234, BLD_donor_89, AML-90","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"donor_id cannot begin with 'DO*'. This prefix is reserved for ICGC IDs","script":"if (donor_id ~= '(D|d)(O|o).*') { return false } return true"}}],"controlled":false},{"name":"procedure_interval","label":"Interval between primary diagnosis and procedure, in days","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"procedure_type","label":"Controlled vocabulary description of the procedure type. Vocabulary can be extended by disease-specific projects. Prefix extensions with 3-digit center code, e.g. 008.1 Beijing Cancer Hospital, fine needle aspiration of primary","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"surgery.0.procedure_type.v1"}}],"controlled":false},{"name":"procedure_site","label":"Anatomical site of the procedure. This must use a standard controlled vocabulary which should be reported in advance to the DCC.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}}],"controlled":false},{"name":"resection_status","label":"For resection procedures, an indication of the extent of residual disease.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"surgery.0.resection_status.v1"}}],"controlled":false},{"name":"specimen_id","label":"ID of ICGC specimen resulting from procedure. If present, must match specimen_id in specimen data file.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"regex","config":{"examples":"LAML_PO_00445, THY_099-tumour","pattern":"^([\\w+\\-\\_]+)$"}},{"type":"script","config":{"description":"specimen_id cannot begin with 'SP*'. This prefix is reserved for ICGC IDs","script":"if (specimen_id ~= '(S|s)(P|p).*') { return false } return true"}}],"controlled":false}],"relations":[{"fields":["donor_id"],"bidirectional":false,"other":"donor","otherFields":["donor_id"],"optionals":[]},{"fields":["donor_id","specimen_id"],"bidirectional":false,"other":"specimen","otherFields":["donor_id","specimen_id"],"optionals":[1]}]},{"name":"therapy","label":"Donor Postresection Therapy (therapy)","pattern":"^therapy(\\.[a-zA-Z0-9]+)?\\.txt(?:\\.gz)?$","role":"SUBMISSION","uniqueFields":["donor_id"],"fields":[{"name":"donor_id","label":"Unique identifier for the donor; assigned by data provider. It must be coded, and correspond to a donor ID listed in the donor data file.","valueType":"TEXT","summaryType":"UNIQUE_COUNT","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"regex","config":{"examples":"90234, BLD_donor_89, AML-90","pattern":"^[\\w+\\-\\_]+$"}},{"type":"script","config":{"description":"donor_id cannot begin with 'DO*'. This prefix is reserved for ICGC IDs","script":"if (donor_id ~= '(D|d)(O|o).*') { return false } return true"}}],"controlled":false},{"name":"first_therapy_start_interval","label":"Interval between primary diagnosis and initiation of the first postresection therapy, in days","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"first_therapy_duration","label":"Duration of first postresection therapy, in days","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"first_therapy_type","label":"Type of first postresection therapy (ie. therapy given to the patient after the sample was removed from the patient). Treatment given to the patient before the sample was removed should be submitted in the 'specimen_donor_treatment_type' field in the specimen file.","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"therapy.0.therapy_type.v1"}}],"controlled":false},{"name":"first_therapy_response","label":"What was the clinical effect of the first postresection therapy?","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"therapy.0.therapy_response.v2"}},{"type":"script","config":{"description":"Use this field to describe the clinical effect of the type of therapy described in 'first_therapy_type'","script":"therapy_types = ['2', 'chemotherapy', '3', 'radiation therapy', '4', 'combined chemo+radiation therapy', '5', 'immunotherapy', '6', 'combined chemo+immunotherapy', '7', 'surgery', '9', 'bone marrow transplant', '10', 'stem cell transplant', '11', 'monoclonal antibodies (for liquid tumours)']; if (therapy_types contains first_therapy_type) { first_therapy_response != null } else { return true }"}}],"controlled":false},{"name":"first_therapy_therapeutic_intent","label":"The therapeutic intent of the first post resection therapy","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"therapy.0.therapeutic_intent.v1"}},{"type":"script","config":{"description":"Use this field to describe the therapeutic intent of the type of therapy described in 'first_therapy_type'","script":"therapy_types = ['2', 'chemotherapy', '3', 'radiation therapy', '4', 'combined chemo+radiation therapy', '5', 'immunotherapy', '6', 'combined chemo+immunotherapy', '7', 'surgery', '9', 'bone marrow transplant', '10', 'stem cell transplant', '11', 'monoclonal antibodies (for liquid tumours)']; if (therapy_types contains first_therapy_type) { first_therapy_therapeutic_intent != '1' && first_therapy_therapeutic_intent != 'not applicable' } else { return true }"}}],"controlled":false},{"name":"second_therapy_start_interval","label":"Interval between primary diagnosis and initiation of the second postresection therapy, in days","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"second_therapy_duration","label":"Duration of second postresection therapy, in days","valueType":"INTEGER","summaryType":"AVERAGE","restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":false},{"name":"second_therapy_type","label":"Type of second postresection therapy (ie. therapy given to the patient after the sample was removed from the patient).","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"therapy.0.therapy_type.v1"}}],"controlled":false},{"name":"second_therapy_response","label":"What was the clinical effect of the second postresection therapy?","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"codelist","config":{"name":"therapy.0.therapy_response.v2"}},{"type":"script","config":{"description":"Use this field to describe the clinical effect of the type of therapy described in 'second_therapy_type'","script":"therapy_types = ['2', 'chemotherapy', '3', 'radiation therapy', '4', 'combined chemo+radiation therapy', '5', 'immunotherapy', '6', 'combined chemo+immunotherapy', '7', 'surgery', '9', 'bone marrow transplant', '10', 'stem cell transplant', '11', 'monoclonal antibodies (for liquid tumours)']; if (therapy_types contains second_therapy_type) { second_therapy_response != null } else { return true }"}}],"controlled":false},{"name":"second_therapy_therapeutic_intent","label":"The therapeutic intent of the second postresection therapy","valueType":"TEXT","summaryType":"FREQUENCY","restrictions":[{"type":"required","config":{"acceptMissingCode":false}},{"type":"codelist","config":{"name":"therapy.0.therapeutic_intent.v1"}},{"type":"script","config":{"description":"Use this field to describe the therapeutic intent of the type of therapy described in 'second_therapy_type'","script":"therapy_types = ['2', 'chemotherapy', '3', 'radiation therapy', '4', 'combined chemo+radiation therapy', '5', 'immunotherapy', '6', 'combined chemo+immunotherapy', '7', 'surgery', '9', 'bone marrow transplant', '10', 'stem cell transplant', '11', 'monoclonal antibodies (for liquid tumours)']; if (therapy_types contains second_therapy_type) { second_therapy_therapeutic_intent != '1' && second_therapy_therapeutic_intent != 'not applicable' } else { return true }"}}],"controlled":false},{"name":"other_therapy","label":"Other postresection therapy","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"script","config":{"description":"Use this field to describe other therapies if either 'first_therapy_type' or 'second_therapy_type' are specified as 'other therapy'","script":"if (first_therapy_type == '8' || first_therapy_type == 'other therapy' || second_therapy_type == '8' || second_therapy_type == 'other therapy') { other_therapy != null } else { return true }"}}],"controlled":false},{"name":"other_therapy_response","label":"What is the clinical effect of the postresection therapy","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":true}},{"type":"script","config":{"description":"Use this field to describe the response to the other therapy described in 'other_therapy'","script":"if (other_therapy != null) { other_therapy_response != null } else { return true }"}}],"controlled":false},{"name":"therapy_notes","label":"Further description of therapy, such as dosing schedule.","valueType":"TEXT","summaryType":null,"restrictions":[{"type":"required","config":{"acceptMissingCode":true}}],"controlled":true}],"relations":[{"fields":["donor_id"],"bidirectional":false,"other":"donor","otherFields":["donor_id"],"optionals":[]}]}]}
